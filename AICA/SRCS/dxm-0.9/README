General Information
===================

DXM is an XM-module player written for the Dreamcast videogame console.
It is meant to complement my graphics library (working name: Artisan) and
provide a way to play music and sounds for use in demos or games.

Installation
============

See the file 'INSTALL' for detailed instructions


Usage
=====

After compiling the package there should be an ARM binary executable in the
arm subdirectory. This is the player routine and should be placed in sound
RAM.

The module to be played must be converted to an internal format. This can
either be done beforehand by compiling the 'loader' program for the host
architecture and feeding it the module (only little-endian systems are
supported), or it can be done on-the-fly by compiling the 'loader'
program for the SH4 architecture and including the compiled object-
and header-file into your own project. The function dxm_load() will
then take as argument a pointer to the module and will convert and upload
it to sound RAM.

In the SH4 subdirectory there is also a file named 'control.o'. This
contains a couple of small functions to give control over the playing
of the module. dxm_halt() will halt the playing, dxm_play() will
(re)start the playing, and dxm_init() (re)initializes the moduel and
takes as argument the order to initialize to.

The file 'dxm.h' also defines a structure that contains variables that
are used by the module-player. These can be accessed in order to synchronize
effects etc. with the music.

Bah...i suck at writing documentation normally, and now its 03:43am which
doesnt exactly improve the situation...will see if i can rewrite this to
be more understandable later....
