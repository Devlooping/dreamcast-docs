<html>

<head>
<title>Exemple de workflow utilisant Microsoft Message Queue et Visual Basic</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
</head>

<body>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="8" width="98%">
 <tr> <td align="right" valign="top" width="20%">&nbsp; </td> <td width="15"></td> <td valign="bottom" width="80%"><font size="5" face="Arial">Exemple de workflow utilisant Microsoft Message Queue &amp; VB </font></td>
 </tr>
 <tr> <td valign="top" width="20%"><strong><font face="Arial">Sommaire</font></strong><font size="3" face="Arial"><br> </font><font size="2" face="Arial"><a href="#Overview:">Présentation</a><br> <a href="#Requirements:">Spécifications</a><br> <a href="#Description of components:">Description des composants</a><br> <a href="#Walk through sample:">Déroulement pas à pas</a><br> <a href="#Features worth noting">À noter</a></font>
<p><font size="3" face="Arial"><br> </font></td> <td width="15"></td> <td valign="top" width="80%"><a name="Overview:"><font size="3"><strong>Présentation:</strong></font></a>
<p><font size="3">Cet exemple est destiné à démontrer la facilité de construction des applications de work-flow en utilisant Visual Basic et Microsoft Message Queue. Vous êtes libre de réutiliser ou de modifier le code de ce projet.</font></p> 
<p><font size="3">Cet exemple de work-flow réalise une simulation de système de 'traitement de déclaration d'assurance' simplifié. Les déclarations sont saisies par l'intermédiaire d'une interface VB. Une fois soumises, ces déclarations sont placées dans une 'file de déclarations de d'assurance'. Une seconde application VB permet à un 'processeur de déclaration d'assurance' d'approuver les déclarations. Une fois approuvées, les déclarations sont déplacées vers une seconde 'file comptable'. Une troisième application VB est utilisée pour traiter les déclarations dans la file 'comptabilité'. Lorsqu'elles sont approuvées, les messages sont supprimés de la seconde file et la work-flow est complet.</font></p> 
<p><font size="3">Une quatrième application est utilisée pour administrer l'ensemble du système. Elle permet la création et le suivi des files.</font></p> <hr> 
<p><strong><a name="Requirements:"><font size="3">Spécifications&nbsp;:</font></a></strong></p> 
<p><font size="3">Vous devez avoir Visual Basic 6.0 (ou supérieur) et Microsoft Message Queue installés. Microsoft Message Queue est disponible avec l'Option Pack Windows NT (que vous pouvez télécharger à partir du site de Microsoft).</font></p> 
 <hr> 
<p><a name="Description of components:"><strong><font size="3">Description des composants&nbsp;:</font></strong></a></p> 
<p><font size="3">Cet exemple est composé de quatre projets&nbsp;:</font></p> <blockquote> 
<p>admspt0.vbp (Administer - Step0) : Définit les files pour l'exemple. Permet l'affichage du contenu des files.</p> 
<p>claimsp1.vbp (ClaimEntry Step1) : Permet la soumission des déclarations (démarre le work-flow).</p> 
<p>procsp2.vbp (Processing Step2) : Traite les déclarations de la première file et les déplace vers la seconde.</p> 
<p>accstp3.vbp (Accounting Step3) : Traite les déclarations de la seconde file (termine le work-flow).</p> </blockquote> <hr> 
<p><a name="Walk through sample:"><font size="2" face="Arial"><strong>Déroulement pas à pas&nbsp;:</strong> (notez que chaque étape peut être réalisée sur une machine différente)</font></a></p> <blockquote> 
<p><strong>a) Définissez les files&nbsp;:</strong></p> <blockquote> 
<p>1. Démarrez 'Adminster Step0'.</p> 
<p>2. Cliquez sur le bouton 'Créer de nouvelles files'.</p> 
<p>3. Spécifiez l'emplacement des files au format 'NomMachine\SpécificationFile' (ne faites pas figurer '\\' avant le nom de la machine). Si le format '.\SpécificationFile' est utilisé, la file sera créée sur la machine actuelle.</p> 
<p>4. Cliquez sur le bouton 'Créer de nouvelles files'.</p> 
<p><strong>Résultat&nbsp;:</strong> Vous avez désormais créé les files pour le système de work-flow de votre entreprise.</p> </blockquote> 
<p><strong>b) Démarrez un work-flow&nbsp;:</strong></p> <blockquote> 
<p>5. Démarrez 'ClaimEntry - Step1'</p> 
<p>6. Modifiez les attributs de déclaration souhaités.</p> 
<p>7. Cliquez sur le bouton 'Soumettre'.</p> </blockquote> <blockquote> 
<p><strong>Résultat&nbsp;:</strong> Vous avez désormais soumis un message pour la première file de message de votre système de work-flow.</p> 
 </blockquote> 
<p><strong>c) Déplacez du work-flow dans votre système</strong></p> <blockquote> 
<p>8. Démarrez 'Processing - Step2'</p> 
<p>9. Sélectionnez un message que vous voulez traiter dans la première file et double-cliquez sur lui dans la liste.</p> 
<p>10. Cliquez sur le bouton 'Approuver'.</p> </blockquote> <blockquote> 
<p><strong>Résultat&nbsp;:</strong> Vous avez déplacé un élément de work-flow de la première file vers la seconde.</p> 
 </blockquote> 
<p><strong>d) Terminez le work-flow dans votre système.</strong></p> <blockquote> 
<p>11. Démarrez 'Accounting - Step3'.</p> 
<p>12. Sélectionnez un message que vous voulez traiter dans la seconde file et double-cliquez sur son nom dans la liste.</p> 
<p>13. Cliquez sur le bouton 'Approuver'.</p> </blockquote> <blockquote> 
<p><strong>Résultat&nbsp;:</strong> Vous avez supprimé le message de la seconde file et terminé votre opération de work-flow.</p> 
<p>&nbsp;</p> <hr> </blockquote> </blockquote> 
<p><a name="Features worth noting"><strong><font size="2" face="Arial">À noter&nbsp;:</font></strong></a></p> <blockquote> 
<p><font size="2" face="Arial"><strong>Cache du GUID de file&nbsp;:</strong>&nbsp; Les routines de support gèrent un cache local (dans le registre système) de l'identificateur unique global (GUID) de file. Ceci permet d'accéder à une file même lorsque la machine est déconnectée du réseau (ce qui est utile pour des opérations comme la soumission de messages dans la file sans être en ligne). Ce code est susceptible d'intéresser toute personne qui développe des systèmes de files de messages.</font></p> 
<p><font size="2" face="Arial"><strong>Persistance des variables dans les msgs&nbsp;:</strong>&nbsp; Pour assurer la persistance structurée de groupes de variables (des données) une nouvelle classe permet le stockage de ces données dans un PropertyBag (nouveauté de Visual Basic 6.0&nbsp;!) et la persistance/dé-persistance de ce jeu de propriétés vers/à partir des messages. Ceci démontre la facilité de mise en œuvre de la persistance des jeux de propriétés.</font></p> 
<p><font size="2" face="Arial"><strong>Événements de file de messages&nbsp;:</strong>&nbsp; Les projets contiennent du code qui permet la réception d'événements de Microsoft Message Queue. Ceci permet la mise à jour d'une application lorsque de nouveaux messages arrivent dans une file spécifiée.</font></p> </blockquote> <blockquote> 
<p><font size="2" face="Arial"><strong>Code d'usage général&nbsp;:</strong>&nbsp; Le module 'modQueueSupport' contient des fonctions qui peuvent servir à toute personne développant des solutions à base de files de messages.</font></p> </blockquote> </td>
 </tr>
 <tr> <td valign="top" width="20%"></td> <td width="15"></td> <td valign="top" width="80%"></td>
 </tr>
</table>
</center></div>
</body>
</html>

