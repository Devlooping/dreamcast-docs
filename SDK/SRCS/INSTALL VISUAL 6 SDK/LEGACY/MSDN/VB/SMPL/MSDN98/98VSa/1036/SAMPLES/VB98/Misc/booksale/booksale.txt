Exemple d'application Vente de livres

Ce projet illustre l'utilisation d'un composant ActiveX pour encapsuler les règles et la sécurité de l'entreprise,  et pour fournir des services (sous forme de "boîte noire") à un composant d'interface utilisateur externe. 
Le projet client est destiné à la fourniture d'une interface utilisateur simple et intuitive grâce à laquelle l'utilisateur pourra sélectionner les options de contrôle et afficher les résultats. Le projet client tient compte de la façon dont l'utilisateur travaille et utilise les résultats des applications, mais ne connaît rien des règles d'entreprise ou opérationnelles de l'application.  Le projet serveur est un composant ActiveX destiné à l'encapsulation de règles d'accès aux données et d'entreprise dans des services "approuvés" que les composants client utilisent pour rechercher les informations dont ils ont besoin.  Le composant serveur ne sait pas comment les options de l'utilisateur sont sélectionnées ou comment les résultats sont présentés à l'utilisateur.  Cette absence de connaissances générales sur l'utilisateur 
aide à conserver les fonctionnalités générales du composant du serveur... et permet ainsi d'accroître 
son potentiel de "réutilisation" (dans un projet réel) pour d'autres applications.  Il utilise également les modules de classe pour structurer de manière logique ses règles d'accès aux données et d'entreprise  selon une démarche qui favorise le développement, le débogage, la lecture, la maintenance et la réutilisation du code source.

Le composant ActiveX peut être exécuté sur la même machine que le composant client (ce qui peut être très utile dans les phases de développement et de débogage d'un projet) ou sur une machine distante, ce qui permettra d'exploiter la puissance des traitements distribués et les fonctionnalités d'accès multi-utilisateur d'un serveur de réseau partagé.  
Le composant n'a pas besoin d'être recompilé ou modifié d'une quelconque manière, quel que soit l'endroit où il sera implanté.

Note: Le composant de serveur ActiveX de ce projet utilise une feuille visible dans le seul but de montrer son fonctionnement et son statut. 
D'un point de vue fonctionnel, le composant n'a pas besoin d'interface utilisateur, bien que les informations d'état qui y sont présentées puissent aider au débogage et au contrôle des ressources pendant l'exécution.  Les besoins de contrôle de l'état peuvent également être adressés en fournissant une méthode Status sur le serveur qui peut être appelée par une application de contrôle.

