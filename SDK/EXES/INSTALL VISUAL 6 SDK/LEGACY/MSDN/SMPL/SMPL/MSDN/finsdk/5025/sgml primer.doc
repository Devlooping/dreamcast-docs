{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f17\froman\fcharset238\fprq2 Times New Roman CE;}{\f18\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f20\froman\fcharset161\fprq2 Times New Roman Greek;}{\f21\froman\fcharset162\fprq2 Times New Roman Tur;}{\f22\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f29\fmodern\fcharset238\fprq1 Courier New CE;}{\f30\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f32\fmodern\fcharset161\fprq1 Courier New Greek;}{\f33\fmodern\fcharset162\fprq1 Courier New Tur;}{\f34\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1080 }}\ls1}}{\info{\title SGML Primer}{\author .}{\operator Leann Sunick}{\creatim\yr1997\mo5\dy15\hr15\min8}{\revtim\yr1997\mo5\dy15\hr15\min8}{\printim\yr1996\mo10\dy2\hr11\min2}{\version2}{\edmins0}{\nofpages3}{\nofwords589}{\nofchars3361}{\*\company  }{\nofcharsws4127}{\vern71}}\widowctrl\ftnbj\aenddoc\lytprtmet\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b\fs32 SGML Primer for users of the OFC DTD
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }\pard \nowidctlpar\widctlpar\adjustright {\fs28 
\par }\pard \nowidctlpar\widctlpar\adjustright {\fs28 The Document Type Definition (DTD) vs. The Document
\par }{
\par }\pard \nowidctlpar\widctlpar\adjustright {The DTD is what defines the legal format of an SGML document. For example, the OFC DTD contains the rules for the legal format of an OFC file (the SGML document). These rules are what defines the behavior of the parser used by Money and an OFC server. If the OFC file does not comply to the rules of the DTD, the parser must reject the OFC file.
\par 
\par }{\fs28 
\par }\pard \nowidctlpar\widctlpar\adjustright {\fs28 DTD
\par }{
\par }\pard \nowidctlpar\widctlpar\adjustright {\fs24\ul Markup Declarations}{\fs24  - the DTD is simply a list of markup declarations
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }\pard \nowidctlpar\widctlpar\adjustright {\b\f2 \tab <! Keyword\tab Tagname\tab Associated Parameters >
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }\pard \nowidctlpar\widctlpar\adjustright {\fs24\ul Keywords and associated syntax
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {DOCTYPE - uniquely defines which DTD you are about to define, (for example OFC).
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 <!DOCTYPE OFC [ the markup declarations ]>
\par }{\f2 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {ELEMENT - defines an \lquote object\rquote  within the logical structure of the document. In defining an element, there are two characters that follow the tagname that indicate the requirements of using an element within the document (this is known as minimization). The first indicates the requirements of the opening tag, and the second the requirements of the closing tag. A dash indicates that the tag is required. The letter o indicates that the tag is optional. In the example that follows, the opening tag for a FOO is required, but the closing tag is optional.  
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 <!ELEMENT TAGNAME - o ( the content model )>
\par 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {ENTITY - this is an alias for another parameter or list of parameters, kind of like #define in C (must be listed at the top of the DTD). 
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 <!ENTITY % NAME \ldblquote the content model to put in it\rquote s place \rdblquote >
\par 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {There are several others, but OFC does not use them…
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par }{\fs24\ul Content model
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Sequential - Commas ( , ) define a fixed order of elements. For example, 
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 (x, y, z) 
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {requires an x element, followed by a y element, followed by a z element.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Optional - Question marks ( ? ) define completely optional elements. For example, 
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 (x, y?, z) 
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {requires an x element, optionally followed by a y element, followed by a z element. 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Optional choice - Vertical bars ( | ) represent a logical }{\b or}{ among a set of elements. For example,
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 (x, (y | z))
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {requires an x element, followed by either a y element or a z element, but not both. 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Optional but repeatable - Asterisks ( * ) define elements that are optional, but can be sequentially repeated, with no limits. For example,
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 (x, y, z*)
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {requires an x element, followed by a y element, followed by zero or more z elements.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Required and repeatable - Plus signs (+) define elements which require at least one entry, but can be sequentially repeated, with no limit. For example,
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 (x, y, z+)
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {requires an x element, followed by a y element, followed by one or more z elements.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Required but in any order - Ampersands ( & ) defines required elements where order is not important. For example,
\par }\pard \fi720\li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 (x, y & z)
\par }\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {requires an x element, followed by }{\b either}{ a y element and then a z element }{\b or}{ a z element and then a y element.
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\fs24\ul 
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\fs24\ul Comments
\par }{
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\b\f2 \tab <!-- Comments can be included using this format!!! }{\b\f2\lang1024 -->
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\f2 
\par }{\fs24\ul #PCDATA
\par }{
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {#PCDATA (parsable character data) is a notation that defines where actual data can legally follow a tagname. Data can only be located in these locations, otherwise the document will be considered illegal in format.
\par }\pard \li720\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright { 
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\fs28 
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\fs28 The OFC DTD
\par }\pard \nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {We only use element and entity keywords at this point for describing the data in an OFC file.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {We build up the file using the following functional \lquote objects\rquote  entities to describe the OFC data, each defined in terms of an ELEMENT declaration:  transactions, aggregates, single elements.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {The ENTITY declarations attempt to encapsulate the parsing rules of the individual OFC data formats that follow an element tag.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {The content model for a single element must always contain one of the entity keywords, never #PCDATA directly. This is because the parser must know which type of data stream to expect when it encounters a given element.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {Aggregates define logical groups of elements that always have common ordering of the data. An example of this would be an account.  
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {We use a nested format for describing the set of transactions, with two basic types of transactions at the outermost level; maintenance and financial.
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }\pard \li720\nowidctlpar\widctlpar\adjustright {\fs28 \page }{\b\f2\fs16 
\par }\pard \li720\nowidctlpar\widctlpar\adjustright {
\par }\pard \li720\nowidctlpar\widctlpar\adjustright {
\par }\pard \li720\nowidctlpar\widctlpar\adjustright {
\par }}