/****************************************************************************/
/*             Microsoft SQL Object Manager SQL Script Generator            */
/****************************************************************************/
/* File Path:  D:\AC303\NWINDCS.SQL                                         */
/* Generated By:  sa                                                        */
/* Date:  04/04/94 10:05:06                                                 */
/* Server:  jetsvrnt                                                        */
/****************************************************************************/
/* Database Name:  nwind                                                    */
/* Database User Name:  dbo                                                 */
/* Object Name                         Object Type                          */
/* --------------                      --------------                       */
/* 'All Tables'                                                             */
/* 'All Triggers'                                                           */
/* 'All Rules'                                                              */
/* 'All Defaults'                                                           */
/* 'All Stored Procedures'                                                  */
/****************************************************************************/
/* Uncomment the following line (and change the name, if desired)           */
/* to automatically select a destination database.                          */
/* USE nwind                                                                */
/* GO                                                                       */
/****************************************************************************/
/* Uncomment the following lines to add the guest user.                     */
/* IF NOT EXISTS (SELECT * FROM sysusers WHERE name = 'guest')              */
/*    EXEC sp_adduser guest                                                 */
/* GO                                                                       */
/****************************************************************************/

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Order_Details_Dflt3'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT Order_Details_Dflt3 AS 1
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.UW_ZeroDefault'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT UW_ZeroDefault AS 0
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Categories'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Categories (
   Category_ID int NULL,
   Category_Name varchar (  15 )  NULL,
   Description text NULL,
   Picture image NULL,
   ts timestamp NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Categories.Category_ID'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa ON Categories
    ( Category_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Category_Name'
PRINT ''
/* */
GO

CREATE  UNIQUE  INDEX Category_Name ON Categories
    ( Category_Name ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Customers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Customers (
   Customer_ID varchar (  5 )  NULL,
   Company_Name varchar (  40 )  NULL,
   Contact_Name varchar (  30 )  NULL,
   Contact_Title varchar (  30 )  NULL,
   Address varchar (  60 )  NULL,
   City varchar (  15 )  NULL,
   Region varchar (  15 )  NULL,
   Postal_Code varchar (  10 )  NULL,
   Country varchar (  15 )  NULL,
   Phone varchar (  24 )  NULL,
   Fax varchar (  24 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa ON Customers
    ( Customer_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  City'
PRINT ''
/* */
GO

CREATE  INDEX City ON Customers
    ( City ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Company_Name'
PRINT ''
/* */
GO

CREATE  INDEX Company_Name ON Customers
    ( Company_Name ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Region'
PRINT ''
/* */
GO

CREATE  INDEX Region ON Customers
    ( Region ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.MSysConf'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE MSysConf (
   Config smallint NULL,
   chValue varchar (  255 )  NULL,
   nValue int NULL,
   Descript varchar (  255 )  NULL
 ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Order_Details'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Order_Details (
   Order_ID int NULL,
   Product_ID int NULL,
   Unit_Price money NULL,
   Quantity smallint NULL,
   Discount real NULL,
   ts timestamp NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  Order_Details_Dflt3'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.Order_Details_Dflt3', 'Order_Details.Quantity'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Order_Details.Discount'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa ON Order_Details
    ( Order_ID, Product_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Product_ID'
PRINT ''
/* */
GO

CREATE  INDEX Product_ID ON Order_Details
    ( Product_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference2'
PRINT ''
/* */
GO

CREATE  INDEX Reference2 ON Order_Details
    ( Product_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference4'
PRINT ''
/* */
GO

CREATE  INDEX Reference4 ON Order_Details
    ( Order_ID ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Orders'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Orders (
   Order_ID int NULL,
   Customer_ID varchar (  5 )  NULL,
   Employee_ID int NULL,
   Ship_Name varchar (  40 )  NULL,
   Ship_Address varchar (  60 )  NULL,
   Ship_City varchar (  15 )  NULL,
   Ship_Region varchar (  15 )  NULL,
   Ship_Postal_Code varchar (  10 )  NULL,
   Ship_Country varchar (  15 )  NULL,
   Ship_Via int NULL,
   Order_Date datetime NULL,
   Required_Date datetime NULL,
   Shipped_Date datetime NULL,
   Freight money NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa ON Orders
    ( Order_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Customer_ID'
PRINT ''
/* */
GO

CREATE  INDEX Customer_ID ON Orders
    ( Customer_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Order_Date'
PRINT ''
/* */
GO

CREATE  INDEX Order_Date ON Orders
    ( Order_Date ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference'
PRINT ''
/* */
GO

CREATE  INDEX Reference ON Orders
    ( Customer_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference3'
PRINT ''
/* */
GO

CREATE  INDEX Reference3 ON Orders
    ( Ship_Via ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  theindex'
PRINT ''
/* */
GO

CREATE  INDEX theindex ON Orders
    ( Employee_ID ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.pbcatcol'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE pbcatcol (
   pbc_tnam char (  30 )  NULL,
   pbc_tid int NULL,
   pbc_ownr char (  30 )  NULL,
   pbc_cnam char (  30 )  NULL,
   pbc_cid smallint NULL,
   pbc_labl varchar (  254 )  NULL,
   pbc_lpos smallint NULL,
   pbc_hdr varchar (  254 )  NULL,
   pbc_hpos smallint NULL,
   pbc_jtfy smallint NULL,
   pbc_mask varchar (  31 )  NULL,
   pbc_case smallint NULL,
   pbc_hght smallint NULL,
   pbc_wdth smallint NULL,
   pbc_ptrn varchar (  31 )  NULL,
   pbc_bmap char (  1 )  NULL,
   pbc_init varchar (  254 )  NULL,
   pbc_cmnt varchar (  254 )  NULL,
   pbc_edit varchar (  31 )  NULL,
   pbc_tag varchar (  254 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  pbcatcol_idx'
PRINT ''
/* */
GO

CREATE  UNIQUE  INDEX pbcatcol_idx ON pbcatcol
    ( pbc_tid, pbc_cid ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.pbcatedt'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE pbcatedt (
   pbe_name varchar (  30 ) ,
   pbe_edit varchar (  254 )  NULL,
   pbe_type smallint,
   pbe_cntr int NULL,
   pbe_seqn smallint,
   pbe_flag int NULL,
   pbe_work char (  32 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  pbcatedt_idx'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX pbcatedt_idx ON pbcatedt
    ( pbe_name, pbe_seqn ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.pbcatfmt'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE pbcatfmt (
   pbf_name varchar (  30 ) ,
   pbf_frmt varchar (  254 ) ,
   pbf_type smallint,
   pbf_cntr int NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  pbcatfmt_idx'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX pbcatfmt_idx ON pbcatfmt
    ( pbf_name ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.pbcattbl'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE pbcattbl (
   pbt_tnam char (  30 )  NULL,
   pbt_tid int NULL,
   pbt_ownr char (  30 )  NULL,
   pbd_fhgt smallint NULL,
   pbd_fwgt smallint NULL,
   pbd_fitl char (  1 )  NULL,
   pbd_funl char (  1 )  NULL,
   pbd_fchr smallint NULL,
   pbd_fptc smallint NULL,
   pbd_ffce char (  18 )  NULL,
   pbh_fhgt smallint NULL,
   pbh_fwgt smallint NULL,
   pbh_fitl char (  1 )  NULL,
   pbh_funl char (  1 )  NULL,
   pbh_fchr smallint NULL,
   pbh_fptc smallint NULL,
   pbh_ffce char (  18 )  NULL,
   pbl_fhgt smallint NULL,
   pbl_fwgt smallint NULL,
   pbl_fitl char (  1 )  NULL,
   pbl_funl char (  1 )  NULL,
   pbl_fchr smallint NULL,
   pbl_fptc smallint NULL,
   pbl_ffce char (  18 )  NULL,
   pbt_cmnt varchar (  254 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  pbcattbl_idx'
PRINT ''
/* */
GO

CREATE  UNIQUE  INDEX pbcattbl_idx ON pbcattbl
    ( pbt_tid ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.pbcatvld'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE pbcatvld (
   pbv_name varchar (  30 ) ,
   pbv_vald varchar (  254 ) ,
   pbv_type smallint,
   pbv_cntr int NULL,
   pbv_msg varchar (  254 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  pbcatvld_idx'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX pbcatvld_idx ON pbcatvld
    ( pbv_name ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Products'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Products (
   Product_ID int NULL,
   Supplier_ID int NULL,
   Category_ID int NULL,
   Product_Name varchar (  40 )  NULL,
   English_Name varchar (  40 )  NULL,
   Quantity_Per_Unit varchar (  20 )  NULL,
   Unit_Price money NULL,
   Units_In_Stock smallint NULL,
   Units_On_Order smallint NULL,
   Reorder_Level smallint NULL,
   Discontinued bit
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Products.Product_ID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Products.Units_In_Stock'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Products.Units_On_Order'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Products.Reorder_Level'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Products.Discontinued'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa ON Products
    ( Product_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Category_ID'
PRINT ''
/* */
GO

CREATE  INDEX Category_ID ON Products
    ( Category_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Product_Name'
PRINT ''
/* */
GO

CREATE  INDEX Product_Name ON Products
    ( Product_Name ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference1'
PRINT ''
/* */
GO

CREATE  INDEX Reference1 ON Products
    ( Supplier_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference1_Products'
PRINT ''
/* */
GO

CREATE  INDEX Reference1_Products ON Products
    ( Category_ID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Supplier_ID'
PRINT ''
/* */
GO

CREATE  INDEX Supplier_ID ON Products
    ( Supplier_ID ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Suppliers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Suppliers (
   Supplier_ID int NULL,
   Company_Name varchar (  40 )  NULL,
   Contact_Name varchar (  30 )  NULL,
   Contact_Title varchar (  30 )  NULL,
   Address varchar (  60 )  NULL,
   City varchar (  15 )  NULL,
   Region varchar (  15 )  NULL,
   Postal_Code varchar (  10 )  NULL,
   Country varchar (  15 )  NULL,
   Phone varchar (  24 )  NULL,
   Fax varchar (  24 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  primarykey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX primarykey ON Suppliers
    ( Supplier_ID ) 
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.INSERT_ORDER_DETAILS'
PRINT ''
/****************************************************************************/
GO

CREATE PROCEDURE INSERT_ORDER_DETAILS (@OID INT, @PID INT, @UPR MONEY, @QUAN SMALLINT, @DISC REAL) AS
INSERT INTO ORDER_DETAILS (ORDER_ID, PRODUCT_ID, UNIT_PRICE, QUANTITY, DISCOUNT)
VALUES (@OID, @PID, @UPR, @QUAN, @DISC)

 
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.MyCustomers'
PRINT ''
/****************************************************************************/
GO

create procedure MyCustomers as
select * from customers
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.MyOrders'
PRINT ''
/****************************************************************************/
GO

create procedure MyOrders as select * from orders where order_id <= 10100
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.hasparams'
PRINT ''
/****************************************************************************/
GO

create procedure hasparams(@oid int)
as select order_id, customer_id, employee_id, order_date
from orders where order_id <= @oid

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.pb_catcol'
PRINT ''
/****************************************************************************/
GO

 create procedure dbo.pb_catcol @tblobjid int, @colobjid smallint as 
 	 select pbc_labl, pbc_lpos, pbc_hdr, pbc_hpos,  		 pbc_jtfy, pbc_mask, pbc_case, pbc_hght, pbc_wdth, 
 		 pbc_ptrn, pbc_bmap, pbc_cmnt, pbc_init, pbc_edit 
 		 from dbo.pbcatcol where pbc_tid = @tblobjid and 
 			 pbc_cid = @colobjid 
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.pb_catedt'
PRINT ''
/****************************************************************************/
GO

create procedure dbo.pb_catedt as 
  	 select pbe_name, pbe_edit, pbe_type, pbe_cntr, pbe_work, pbe_seqn, pbe_flag 
  		 from dbo.pbcatedt order by pbe_name, pbe_seqn
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.pb_catfmt'
PRINT ''
/****************************************************************************/
GO

create procedure dbo.pb_catfmt as 
 	 select pbf_name, pbf_frmt, pbf_type, pbf_cntr 
 	 from dbo.pbcatfmt
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.pb_cattbl'
PRINT ''
/****************************************************************************/
GO

create procedure dbo.pb_cattbl @tblobjid int as 
 	 select pbd_fhgt, pbd_fwgt, pbd_fitl, pbd_funl, 
 		 pbd_fchr, pbd_fptc, pbd_ffce, 
 		 pbh_fhgt, pbh_fwgt, pbh_fitl, pbh_funl, 
 		 pbh_fchr, pbh_fptc, pbh_ffce, 
 		 pbl_fhgt, pbl_fwgt, pbl_fitl, pbl_funl, 
 		 pbl_fchr, pbl_fptc, pbl_ffce, pbt_cmnt 
 			 from dbo.pbcattbl where pbt_tid = @tblobjid 
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.pb_catvld'
PRINT ''
/****************************************************************************/
GO

create procedure dbo.pb_catvld as 
  	 select pbv_name, pbv_vald, pbv_type, pbv_cntr, pbv_msg 
  		 from dbo.pbcatvld
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Categories_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Categories_DTrig ON Categories FOR DELETE AS
IF (SELECT COUNT(*) FROM deleted, Products WHERE (deleted.Category_ID = Products.Category_ID)) > 0
    BEGIN
        RAISERROR 44445 'There are dependant rows in Products'
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Categories_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Categories_ITrig ON Categories FOR INSERT AS
DECLARE @maxc int, @newc int 
IF (SELECT Count(*) FROM inserted WHERE Category_Name IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Category_Name may not be NULL"
    ROLLBACK TRANSACTION
  END
SELECT @maxc = (SELECT Max(Category_ID) FROM Categories) 
SELECT @newc = (SELECT Category_ID FROM inserted) 
IF @newc = 0 OR @maxc <> @newc SELECT @maxc = @maxc + 1 
UPDATE Categories SET Category_ID = @maxc WHERE Category_ID = @newc

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Categories_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Categories_UTrig ON Categories FOR UPDATE AS
IF (SELECT Count(*) FROM inserted WHERE Category_Name IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Category_Name may not be NULL"
    ROLLBACK TRANSACTION
  END
IF UPDATE(Category_ID)
    BEGIN
        IF (SELECT COUNT(*) FROM deleted, Products WHERE (deleted.Category_ID = Products.Category_ID)) > 0
            BEGIN
                RAISERROR 44446 'There are dependant rows in Products'
                ROLLBACK TRANSACTION
            END
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Customers_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Customers_DTrig ON Customers FOR DELETE AS
IF (SELECT COUNT(*) FROM deleted, Orders WHERE (deleted.Customer_ID = Orders.Customer_ID)) > 0
    BEGIN
        RAISERROR 44445 'There are dependant rows in Orders'
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Customers_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Customers_ITrig ON Customers FOR INSERT AS
IF (SELECT Count(*) FROM inserted WHERE Company_Name IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Company_Name may not be NULL"
    ROLLBACK TRANSACTION
  END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Customers_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Customers_UTrig ON Customers FOR UPDATE AS
IF (SELECT Count(*) FROM inserted WHERE Company_Name IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Company_Name may not be NULL"
    ROLLBACK TRANSACTION
  END
IF UPDATE(Customer_ID)
    BEGIN
       UPDATE Orders
       SET Orders.Customer_ID = inserted.Customer_ID
       FROM Orders, deleted, inserted
       WHERE deleted.Customer_ID = Orders.Customer_ID
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Order_Details_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Order_Details_ITrig ON Order_Details FOR INSERT AS
IF (SELECT Count(*) FROM inserted WHERE Unit_Price IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Unit_Price may not be NULL"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE Quantity IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Quantity may not be NULL"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE NOT (Quantity>0)) > 0
  BEGIN
    RAISERROR 44444 "Quantity must be greater than 0"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE Discount IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Discount may not be NULL"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE NOT (Discount Between 0 And 1)) > 0
  BEGIN
    RAISERROR 44444 "You must enter a value with a percent sign."
    ROLLBACK TRANSACTION
  END
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Orders, inserted WHERE (Orders.Order_ID = inserted.Order_ID))
    BEGIN
        RAISERROR 44447 'No row in Orders with matching key'
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Order_Details_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Order_Details_UTrig ON Order_Details FOR UPDATE AS
IF (SELECT Count(*) FROM inserted WHERE Unit_Price IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Unit_Price may not be NULL"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE Quantity IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Quantity may not be NULL"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE NOT (Quantity>0)) > 0
  BEGIN
    RAISERROR 44444 "Quantity must be greater than 0"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE Discount IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Discount may not be NULL"
    ROLLBACK TRANSACTION
  END
ELSE IF (SELECT Count(*) FROM inserted WHERE NOT (Discount Between 0 And 1)) > 0
  BEGIN
    RAISERROR 44444 "You must enter a value with a percent sign."
    ROLLBACK TRANSACTION
  END
IF UPDATE(Order_ID)
    BEGIN
        IF (SELECT COUNT(*) FROM inserted) !=
           (SELECT COUNT(*) FROM Orders, inserted WHERE (Orders.Order_ID = inserted.Order_ID))
            BEGIN
                RAISERROR 44446 'No row in Orders with matching key'
                ROLLBACK TRANSACTION
            END
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Orders_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Orders_DTrig ON Orders FOR DELETE AS
DELETE Order_Details FROM deleted, Order_Details WHERE deleted.Order_ID = Order_Details.Order_ID

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Orders_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Orders_ITrig ON Orders FOR INSERT AS
IF (SELECT Count(*) FROM inserted WHERE Customer_ID IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Customer_ID may not be NULL"
    ROLLBACK TRANSACTION
  END
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.Customer_ID = inserted.Customer_ID))
    BEGIN
        RAISERROR 44447 'No row in Customers with matching key'
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Orders_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Orders_UTrig ON Orders FOR UPDATE AS
IF (SELECT Count(*) FROM inserted WHERE Customer_ID IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Customer_ID may not be NULL"
    ROLLBACK TRANSACTION
  END
IF UPDATE(Order_ID)
    BEGIN
        IF (SELECT COUNT(*) FROM deleted, Order_Details WHERE (deleted.Order_ID = Order_Details.Order_ID)) > 0
            BEGIN
                RAISERROR 44446 'There are dependant rows in Order_Details'
                ROLLBACK TRANSACTION
            END
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Products_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Products_DTrig ON Products FOR DELETE AS
IF (SELECT COUNT(*) FROM deleted, Order_Details WHERE (deleted.Product_ID = Order_Details.Product_ID)) > 0
    BEGIN
        RAISERROR 44445 'There are dependant rows in Order_Details'
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Products_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Products_ITrig ON Products FOR INSERT AS
DECLARE @maxc int, @newc int 
IF (SELECT Count(*) FROM inserted WHERE Product_Name IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Product_Name may not be NULL"
    ROLLBACK TRANSACTION
  END
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Categories, inserted WHERE (Categories.Category_ID = inserted.Category_ID))
    BEGIN
        RAISERROR 44447 'No row in Categories with matching key'
        ROLLBACK TRANSACTION
    END
SELECT @maxc = (SELECT Max(Product_ID) FROM Products) 
SELECT @newc = (SELECT Product_ID FROM inserted) 
IF @newc = 0 OR @maxc <> @newc SELECT @maxc = @maxc + 1 
UPDATE Products SET Product_ID = @maxc WHERE Product_ID = @newc

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Products_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Products_UTrig ON Products FOR UPDATE AS
IF (SELECT Count(*) FROM inserted WHERE Product_Name IS NULL) > 0
  BEGIN
    RAISERROR 44444 "Product_Name may not be NULL"
    ROLLBACK TRANSACTION
  END
IF UPDATE(Product_ID)
    BEGIN
        IF (SELECT COUNT(*) FROM deleted, Order_Details WHERE (deleted.Product_ID = Order_Details.Product_ID)) > 0
            BEGIN
                RAISERROR 44446 'There are dependant rows in Order_Details'
                ROLLBACK TRANSACTION
            END
    END

GO

