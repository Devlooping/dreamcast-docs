/****************************************************************************/
/*             Microsoft SQL Object Manager SQL Script Generator            */
/****************************************************************************/
/* File Path:  D:\develop\dbsync\sqlsrvr\dbsync.sql                         */
/* Generated By:  sa                                                        */
/* Date:  02/14/95 02:29:47                                                 */
/* Server:  ryanr90                                                         */
/****************************************************************************/
/* Database Name:  db_dbsync                                                */
/* Database User Name:  dbo                                                 */
/* Object Name                         Object Type                          */
/* --------------                      --------------                       */
/* 'All Objects'                                                            */
/****************************************************************************/
/* Uncomment the following line (and change the name, if desired)           */
/* to automatically select a destination database.                          */
/* USE db_dbsync                                                            */
/* GO                                                                       */
/****************************************************************************/
/* Uncomment the following lines to add the guest user.                     */
/* IF NOT EXISTS (SELECT * FROM sysusers WHERE name = 'guest')              */
/*    EXEC sp_adduser guest                                                 */
/* GO                                                                       */
/****************************************************************************/

EXEC sp_addlogin dbsync, 'dbsync', db_dbsync, NULL
GO

EXEC sp_addgroup 'DBSyncUsers'
GO

EXEC sp_adduser 'dbsync', 'dbsync', DBSyncUsers
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.spp_getdistribuserlist'))
BEGIN
   PRINT 'Dropping old version of dbo.spp_getdistribuserlist'
   DROP procedure dbo.spp_getdistribuserlist
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.spp_makedb_getrelatedusers'))
BEGIN
   PRINT 'Dropping old version of dbo.spp_makedb_getrelatedusers'
   DROP procedure dbo.spp_makedb_getrelatedusers
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.spp_makedb_userlist'))
BEGIN
   PRINT 'Dropping old version of dbo.spp_makedb_userlist'
   DROP procedure dbo.spp_makedb_userlist
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.spp_customerlist'))
BEGIN
   PRINT 'Dropping old version of dbo.spp_customerlist'
   DROP procedure dbo.spp_customerlist
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Contacts_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Contacts_ITrig'
   DROP trigger dbo.Contacts_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Contacts_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Contacts_UTrig'
   DROP trigger dbo.Contacts_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Customers_DTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Customers_DTrig'
   DROP trigger dbo.Customers_DTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Customers_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Customers_ITrig'
   DROP trigger dbo.Customers_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Customers_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Customers_UTrig'
   DROP trigger dbo.Customers_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_sent_files_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_sent_files_ITrig'
   DROP trigger dbo.dbx_sent_files_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_sent_files_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_sent_files_UTrig'
   DROP trigger dbo.dbx_sent_files_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_transactions_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_transactions_ITrig'
   DROP trigger dbo.dbx_transactions_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_user_transactions_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_user_transactions_ITrig'
   DROP trigger dbo.dbx_user_transactions_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Managers_DTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Managers_DTrig'
   DROP trigger dbo.Managers_DTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Managers_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Managers_UTrig'
   DROP trigger dbo.Managers_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Notes_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Notes_ITrig'
   DROP trigger dbo.Notes_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Notes_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Notes_UTrig'
   DROP trigger dbo.Notes_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Users_DTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Users_DTrig'
   DROP trigger dbo.Users_DTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Users_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Users_ITrig'
   DROP trigger dbo.Users_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Users_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.Users_UTrig'
   DROP trigger dbo.Users_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UsersCustomers_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.UsersCustomers_ITrig'
   DROP trigger dbo.UsersCustomers_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UsersCustomers_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.UsersCustomers_UTrig'
   DROP trigger dbo.UsersCustomers_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UsersManagers_ITrig'))
BEGIN
   PRINT 'Dropping old version of dbo.UsersManagers_ITrig'
   DROP trigger dbo.UsersManagers_ITrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UsersManagers_UTrig'))
BEGIN
   PRINT 'Dropping old version of dbo.UsersManagers_UTrig'
   DROP trigger dbo.UsersManagers_UTrig
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Contacts'))
BEGIN
   PRINT 'Dropping old version of dbo.Contacts'
   DROP table dbo.Contacts
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Customers'))
BEGIN
   PRINT 'Dropping old version of dbo.Customers'
   DROP table dbo.Customers
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_adminlog'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_adminlog'
   DROP table dbo.dbx_adminlog
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_applied'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_applied'
   DROP table dbo.dbx_applied
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_dbusers'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_dbusers'
   DROP table dbo.dbx_dbusers
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_sent_files'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_sent_files'
   DROP table dbo.dbx_sent_files
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_transactions'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_transactions'
   DROP table dbo.dbx_transactions
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_user_transactions'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_user_transactions'
   DROP table dbo.dbx_user_transactions
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Managers'))
BEGIN
   PRINT 'Dropping old version of dbo.Managers'
   DROP table dbo.Managers
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.MSysConf'))
BEGIN
   PRINT 'Dropping old version of dbo.MSysConf'
   DROP table dbo.MSysConf
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Notes'))
BEGIN
   PRINT 'Dropping old version of dbo.Notes'
   DROP table dbo.Notes
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Products'))
BEGIN
   PRINT 'Dropping old version of dbo.Products'
   DROP table dbo.Products
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Sales'))
BEGIN
   PRINT 'Dropping old version of dbo.Sales'
   DROP table dbo.Sales
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Users'))
BEGIN
   PRINT 'Dropping old version of dbo.Users'
   DROP table dbo.Users
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UsersCustomers'))
BEGIN
   PRINT 'Dropping old version of dbo.UsersCustomers'
   DROP table dbo.UsersCustomers
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UsersManagers'))
BEGIN
   PRINT 'Dropping old version of dbo.UsersManagers'
   DROP table dbo.UsersManagers
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Contacts_DateCreated_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Contacts_DateCreated_D'
   DROP default dbo.Contacts_DateCreated_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Contacts_DateModified_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Contacts_DateModified_D'
   DROP default dbo.Contacts_DateModified_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Customers_DateCreated_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Customers_DateCreated_D'
   DROP default dbo.Customers_DateCreated_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Customers_DateModified_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Customers_DateModified_D'
   DROP default dbo.Customers_DateModified_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.dbx_adminlog_EventDate_D'))
BEGIN
   PRINT 'Dropping old version of dbo.dbx_adminlog_EventDate_D'
   DROP default dbo.dbx_adminlog_EventDate_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Notes_Date_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Notes_Date_D'
   DROP default dbo.Notes_Date_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Notes_Type_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Notes_Type_D'
   DROP default dbo.Notes_Type_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.Users_Closing_D'))
BEGIN
   PRINT 'Dropping old version of dbo.Users_Closing_D'
   DROP default dbo.Users_Closing_D
END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id('dbo.UW_ZeroDefault'))
BEGIN
   PRINT 'Dropping old version of dbo.UW_ZeroDefault'
   DROP default dbo.UW_ZeroDefault
END
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Contacts_DateCreated_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Contacts_DateCreated_D AS getdate()
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Contacts_DateModified_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Contacts_DateModified_D AS getdate()
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Customers_DateCreated_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Customers_DateCreated_D AS getdate()
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Customers_DateModified_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Customers_DateModified_D AS getdate()
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.dbx_adminlog_EventDate_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.dbx_adminlog_EventDate_D AS getdate()
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Notes_Date_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Notes_Date_D AS getdate()
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Notes_Type_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Notes_Type_D AS 'Note'
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.Users_Closing_D'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.Users_Closing_D AS 'Sincerely'
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Default:  dbo.UW_ZeroDefault'
PRINT ''
/****************************************************************************/
GO

CREATE DEFAULT dbo.UW_ZeroDefault AS 0
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Contacts'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Contacts (
   ContactID int NULL,
   CustomerID int NULL,
   DisplayName varchar (  100 )  NULL,
   Prefix varchar (  8 )  NULL,
   FirstName varchar (  50 )  NULL,
   MidIni varchar (  1 )  NULL,
   LastName varchar (  50 )  NULL,
   Suffix varchar (  10 )  NULL,
   Salutation varchar (  32 )  NULL,
   Title varchar (  64 )  NULL,
   Address varchar (  128 )  NULL,
   City varchar (  32 )  NULL,
   State varchar (  2 )  NULL,
   Zip varchar (  10 )  NULL,
   GeneralPhone varchar (  50 )  NULL,
   Direct varchar (  50 )  NULL,
   Fax varchar (  50 )  NULL,
   Mobile varchar (  50 )  NULL,
   Extension varchar (  50 )  NULL,
   Pager varchar (  50 )  NULL,
   EMail varchar (  50 )  NULL,
   DateCreated datetime NULL,
   DateModified datetime NULL,
   dbsyncid smallint NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Contacts.ContactID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Contacts.CustomerID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  Contacts_DateCreated_D'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.Contacts_DateCreated_D', 'Contacts.DateCreated'
GO

/* */
PRINT ''
PRINT 'Binding Default:  Contacts_DateModified_D'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.Contacts_DateModified_D', 'Contacts.DateModified'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Contacts.dbsyncid'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON Contacts
    ( ContactID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  DisplayName'
PRINT ''
/* */
GO

CREATE  INDEX DisplayName ON Contacts
    ( DisplayName ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  FirstName'
PRINT ''
/* */
GO

CREATE  INDEX FirstName ON Contacts
    ( FirstName ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  LastName'
PRINT ''
/* */
GO

CREATE  INDEX LastName ON Contacts
    ( LastName ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference5'
PRINT ''
/* */
GO

CREATE  INDEX Reference5 ON Contacts
    ( CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Contacts'
PRINT ''
/* */
GO

GRANT SELECT ON Contacts TO DBSyncUsers
GO
GRANT INSERT ON Contacts TO DBSyncUsers
GO
GRANT DELETE ON Contacts TO DBSyncUsers
GO
GRANT UPDATE ON Contacts TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Customers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Customers (
   CustomerID int NULL,
   CustomerName varchar (  64 )  NULL,
   Address varchar (  128 )  NULL,
   City varchar (  32 )  NULL,
   State varchar (  2 )  NULL,
   Zip varchar (  10 )  NULL,
   Phone varchar (  50 )  NULL,
   Fax varchar (  50 )  NULL,
   DateCreated datetime NULL,
   DateModified datetime NULL,
   dbsyncid smallint NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  Customers_DateCreated_D'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.Customers_DateCreated_D', 'Customers.DateCreated'
GO

/* */
PRINT ''
PRINT 'Binding Default:  Customers_DateModified_D'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.Customers_DateModified_D', 'Customers.DateModified'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Customers.dbsyncid'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON Customers
    ( CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Company'
PRINT ''
/* */
GO

CREATE  INDEX Company ON Customers
    ( CustomerName ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Customers'
PRINT ''
/* */
GO

GRANT SELECT ON Customers TO DBSyncUsers
GO
GRANT INSERT ON Customers TO DBSyncUsers
GO
GRANT DELETE ON Customers TO DBSyncUsers
GO
GRANT UPDATE ON Customers TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.dbx_adminlog'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE dbx_adminlog (
   EventDate datetime NULL,
   Success bit
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  dbx_adminlog_EventDate_D'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.dbx_adminlog_EventDate_D', 'dbx_adminlog.EventDate'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'dbx_adminlog.Success'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON dbx_adminlog
    ( EventDate ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  dbx_adminlog'
PRINT ''
/* */
GO

GRANT SELECT ON dbx_adminlog TO DBSyncUsers
GO
GRANT INSERT ON dbx_adminlog TO DBSyncUsers
GO
GRANT DELETE ON dbx_adminlog TO DBSyncUsers
GO
GRANT UPDATE ON dbx_adminlog TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.dbx_applied'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE dbx_applied (
   LogDate datetime NULL,
   RowsRead int NULL,
   RowsApplied int NULL,
   UserAbort bit,
   DBXFileName varchar (  12 )  NULL,
   SentBy varchar (  80 )  NULL,
   Reply bit
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'dbx_applied.UserAbort'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'dbx_applied.Reply'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON dbx_applied
    ( LogDate ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  DBXFileName'
PRINT ''
/* */
GO

CREATE  INDEX DBXFileName ON dbx_applied
    ( DBXFileName ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  FileNameSentBy'
PRINT ''
/* */
GO

CREATE  INDEX FileNameSentBy ON dbx_applied
    ( DBXFileName, SentBy ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  LogDate'
PRINT ''
/* */
GO

CREATE  INDEX LogDate ON dbx_applied
    ( LogDate ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  SentBy'
PRINT ''
/* */
GO

CREATE  INDEX SentBy ON dbx_applied
    ( SentBy ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  dbx_applied'
PRINT ''
/* */
GO

GRANT SELECT ON dbx_applied TO DBSyncUsers
GO
GRANT INSERT ON dbx_applied TO DBSyncUsers
GO
GRANT DELETE ON dbx_applied TO DBSyncUsers
GO
GRANT UPDATE ON dbx_applied TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.dbx_dbusers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE dbx_dbusers (
   UserID int NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON dbx_dbusers
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  dbx_dbusers'
PRINT ''
/* */
GO

GRANT SELECT ON dbx_dbusers TO DBSyncUsers
GO
GRANT INSERT ON dbx_dbusers TO DBSyncUsers
GO
GRANT DELETE ON dbx_dbusers TO DBSyncUsers
GO
GRANT UPDATE ON dbx_dbusers TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.dbx_sent_files'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE dbx_sent_files (
   UserID int NULL,
   DateSent datetime NULL,
   FileName varchar (  255 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  DateSent'
PRINT ''
/* */
GO

CREATE  INDEX DateSent ON dbx_sent_files
    ( DateSent ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  FileName'
PRINT ''
/* */
GO

CREATE  INDEX FileName ON dbx_sent_files
    ( FileName ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  UserNumber'
PRINT ''
/* */
GO

CREATE  INDEX UserNumber ON dbx_sent_files
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  dbx_sent_files'
PRINT ''
/* */
GO

GRANT SELECT ON dbx_sent_files TO DBSyncUsers
GO
GRANT INSERT ON dbx_sent_files TO DBSyncUsers
GO
GRANT DELETE ON dbx_sent_files TO DBSyncUsers
GO
GRANT UPDATE ON dbx_sent_files TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.dbx_transactions'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE dbx_transactions (
   TransactionID int NULL,
   EventDate datetime NULL,
   TableName varchar (  64 )  NULL,
   KeyColumns varchar (  255 )  NULL,
   KeyValues varchar (  255 )  NULL,
   ODBCKeyValues varchar (  255 )  NULL,
   Status smallint NULL,
   DeleteConfirmed bit,
   StatusUserID int NULL,
   CustomerID int NULL,
   UpdateSQL text NULL,
   SQL text NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'dbx_transactions.TransactionID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'dbx_transactions.DeleteConfirmed'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON dbx_transactions
    ( TransactionID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  EventDate'
PRINT ''
/* */
GO

CREATE  INDEX EventDate ON dbx_transactions
    ( EventDate ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  dbx_transactions'
PRINT ''
/* */
GO

GRANT SELECT ON dbx_transactions TO DBSyncUsers
GO
GRANT INSERT ON dbx_transactions TO DBSyncUsers
GO
GRANT DELETE ON dbx_transactions TO DBSyncUsers
GO
GRANT UPDATE ON dbx_transactions TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.dbx_user_transactions'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE dbx_user_transactions (
   TransactionID int NULL,
   EventDate datetime NULL,
   StatusUserID int NULL,
   CustomerID int NULL,
   SQL text NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'dbx_user_transactions.TransactionID'
GO

/* */
PRINT ''
PRINT 'Creating Index:  EventDate'
PRINT ''
/* */
GO

CREATE  INDEX EventDate ON dbx_user_transactions
    ( EventDate ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  dbx_user_transactions'
PRINT ''
/* */
GO

GRANT SELECT ON dbx_user_transactions TO DBSyncUsers
GO
GRANT INSERT ON dbx_user_transactions TO DBSyncUsers
GO
GRANT DELETE ON dbx_user_transactions TO DBSyncUsers
GO
GRANT UPDATE ON dbx_user_transactions TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Managers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Managers (
   ManagerUserID int NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON Managers
    ( ManagerUserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Managers'
PRINT ''
/* */
GO

GRANT SELECT ON Managers TO DBSyncUsers
GO
GRANT INSERT ON Managers TO DBSyncUsers
GO
GRANT DELETE ON Managers TO DBSyncUsers
GO
GRANT UPDATE ON Managers TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.MSysConf'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE MSysConf (
   Config smallint NULL,
   chValue varchar (  255 ) ,
   nValue int,
   Comment varchar (  255 ) 
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  SSBidx_Config'
PRINT ''
/* */
GO

CREATE  UNIQUE  INDEX SSBidx_Config ON MSysConf
    ( Config ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  MSysConf'
PRINT ''
/* */
GO

GRANT SELECT ON MSysConf TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Notes'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Notes (
   NoteID int NULL,
   CustomerID int NULL,
   ContactID int NULL,
   UserID int NULL,
   NoteDate datetime NULL,
   NoteType varchar (  50 )  NULL,
   NoteText varchar (  255 )  NULL,
   FileName varchar (  255 )  NULL,
   dbsyncid smallint NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Notes.NoteID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Notes.ContactID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Notes.UserID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Notes.dbsyncid'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON Notes
    ( NoteID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  CustomerID'
PRINT ''
/* */
GO

CREATE  INDEX CustomerID ON Notes
    ( CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  NoteDate'
PRINT ''
/* */
GO

CREATE  INDEX NoteDate ON Notes
    ( NoteDate ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  NoteType'
PRINT ''
/* */
GO

CREATE  INDEX NoteType ON Notes
    ( NoteType ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  UserID'
PRINT ''
/* */
GO

CREATE  INDEX UserID ON Notes
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Notes'
PRINT ''
/* */
GO

GRANT SELECT ON Notes TO DBSyncUsers
GO
GRANT INSERT ON Notes TO DBSyncUsers
GO
GRANT DELETE ON Notes TO DBSyncUsers
GO
GRANT UPDATE ON Notes TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Products'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Products (
   ProductID int NULL,
   Name varchar (  40 )  NULL,
   Description varchar (  255 )  NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Products.ProductID'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON Products
    ( ProductID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Product'
PRINT ''
/* */
GO

CREATE  UNIQUE  INDEX Product ON Products
    ( Name ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Products'
PRINT ''
/* */
GO

GRANT SELECT ON Products TO DBSyncUsers
GO
GRANT INSERT ON Products TO DBSyncUsers
GO
GRANT DELETE ON Products TO DBSyncUsers
GO
GRANT UPDATE ON Products TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Sales'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Sales (
   CustomerID int NULL,
   ProductID int NULL,
   Region int NULL,
   Year smallint NULL,
   January money NULL,
   February money NULL,
   March money NULL,
   April money NULL,
   May money NULL,
   June money NULL,
   July money NULL,
   August money NULL,
   September money NULL,
   October money NULL,
   November money NULL,
   December money NULL,
   TotalSales money NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Sales.CustomerID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Sales.ProductID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Sales.Region'
GO

/* */
PRINT ''
PRINT 'Creating Index:  CustomerNumber'
PRINT ''
/* */
GO

CREATE  INDEX CustomerNumber ON Sales
    ( CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  ProductID'
PRINT ''
/* */
GO

CREATE  INDEX ProductID ON Sales
    ( ProductID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Region'
PRINT ''
/* */
GO

CREATE  INDEX Region ON Sales
    ( Region ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Year'
PRINT ''
/* */
GO

CREATE  INDEX Year ON Sales
    ( Year ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Sales'
PRINT ''
/* */
GO

GRANT SELECT ON Sales TO DBSyncUsers
GO
GRANT INSERT ON Sales TO DBSyncUsers
GO
GRANT DELETE ON Sales TO DBSyncUsers
GO
GRANT UPDATE ON Sales TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.Users'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE Users (
   UserID int NULL,
   LogonName varchar (  50 )  NULL,
   MailName varchar (  100 )  NULL,
   FullName varchar (  100 )  NULL,
   Closing varchar (  50 )  NULL,
   Title varchar (  50 )  NULL,
   Direct varchar (  50 )  NULL,
   Home varchar (  50 )  NULL,
   Fax varchar (  50 )  NULL,
   dbsyncid smallint NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  Users_Closing_D'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.Users_Closing_D', 'Users.Closing'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'Users.dbsyncid'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON Users
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  MailName'
PRINT ''
/* */
GO

CREATE  INDEX MailName ON Users
    ( MailName ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  UserNumber'
PRINT ''
/* */
GO

CREATE  UNIQUE  INDEX UserNumber ON Users
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  Users'
PRINT ''
/* */
GO

GRANT SELECT ON Users TO DBSyncUsers
GO
GRANT INSERT ON Users TO DBSyncUsers
GO
GRANT DELETE ON Users TO DBSyncUsers
GO
GRANT UPDATE ON Users TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.UsersCustomers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE UsersCustomers (
   UserID int NULL,
   CustomerID int NULL,
   dbsyncid smallint NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'UsersCustomers.UserID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'UsersCustomers.CustomerID'
GO

/* */
PRINT ''
PRINT 'Binding Default:  UW_ZeroDefault'
PRINT ''
/* */
GO

EXEC sp_bindefault 'dbo.UW_ZeroDefault', 'UsersCustomers.dbsyncid'
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON UsersCustomers
    ( UserID, CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  ContactID'
PRINT ''
/* */
GO

CREATE  INDEX ContactID ON UsersCustomers
    ( CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference3'
PRINT ''
/* */
GO

CREATE  INDEX Reference3 ON UsersCustomers
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference4'
PRINT ''
/* */
GO

CREATE  INDEX Reference4 ON UsersCustomers
    ( CustomerID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  UserNumber'
PRINT ''
/* */
GO

CREATE  INDEX UserNumber ON UsersCustomers
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  UsersCustomers'
PRINT ''
/* */
GO

GRANT SELECT ON UsersCustomers TO DBSyncUsers
GO
GRANT INSERT ON UsersCustomers TO DBSyncUsers
GO
GRANT DELETE ON UsersCustomers TO DBSyncUsers
GO
GRANT UPDATE ON UsersCustomers TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Table:  dbo.UsersManagers'
PRINT ''
/****************************************************************************/
GO

CREATE TABLE UsersManagers (
   UserID int NULL,
   ManagerUserID int NULL
 ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  aaaaa_PrimaryKey'
PRINT ''
/* */
GO

CREATE  UNIQUE  CLUSTERED  INDEX aaaaa_PrimaryKey ON UsersManagers
    ( ManagerUserID, UserID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  ManagerUserNumber'
PRINT ''
/* */
GO

CREATE  INDEX ManagerUserNumber ON UsersManagers
    ( ManagerUserID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference1'
PRINT ''
/* */
GO

CREATE  INDEX Reference1 ON UsersManagers
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  Reference2'
PRINT ''
/* */
GO

CREATE  INDEX Reference2 ON UsersManagers
    ( ManagerUserID ) 
GO

/* */
PRINT ''
PRINT 'Creating Index:  UserNumber'
PRINT ''
/* */
GO

CREATE  INDEX UserNumber ON UsersManagers
    ( UserID ) 
GO

/* */
PRINT ''
PRINT 'Granting Privileges on:  UsersManagers'
PRINT ''
/* */
GO

GRANT SELECT ON UsersManagers TO DBSyncUsers
GO
GRANT INSERT ON UsersManagers TO DBSyncUsers
GO
GRANT DELETE ON UsersManagers TO DBSyncUsers
GO
GRANT UPDATE ON UsersManagers TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.spp_customerlist'
PRINT ''
/****************************************************************************/
GO

CREATE PROCEDURE spp_customerlist 
	@UserID int =null
AS 

	

	CREATE TABLE #tmpcust
	(CustomerID int null,
	CustomerName varchar(64) null)


	INSERT INTO #tmpcust 
	(CustomerID, CustomerName) 
	VALUES(0, '(All)')

	IF @UserID = null OR @UserID = 0
	BEGIN

		INSERT INTO #tmpcust 
		(CustomerID, CustomerName) 

		SELECT CustomerID, CustomerName 

		FROM Customers


	END
	ELSE
	BEGIN

		INSERT INTO #tmpcust 
		(CustomerID, CustomerName) 

		SELECT Customers.CustomerID, Customers.CustomerName 

		FROM Customers, UsersCustomers

		WHERE 
			Customers.CustomerID = UsersCustomers.CustomerID
		AND
			UsersCustomers.UserID = @UserID




	END


	SELECT CustomerID, CustomerName 
	FROM #tmpcust	
	ORDER BY CustomerName



	


 
GO


/* */
PRINT ''
PRINT 'Granting Privileges on:  spp_customerlist'
PRINT ''
/* */
GO

GRANT EXECUTE ON spp_customerlist TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.spp_getdistribuserlist'
PRINT ''
/****************************************************************************/
GO

CREATE PROC spp_getdistribuserlist
	@StatusUserID int =null,
	@CustomerID int =null

AS

	DELETE FROM dbx_dbusers

	/* if the StatusUserID (sender) is null or zero then */
	/* this transacation is going to ALL active users */

	IF @StatusUserID Is Null or @StatusUserID = 0
	BEGIN
	
		INSERT INTO dbx_dbusers
		SELECT UserID
		FROM Users
	
	END

	/* otherwise... */
	ELSE
	BEGIN


		
		IF @CustomerID <> null
		BEGIN

			/* now all related users for this customer */

			INSERT INTO dbx_dbusers
			SELECT DISTINCT UserID
			FROM UsersCustomers
			WHERE UserID <> @StatusUserID
			AND 
			CustomerID In (SELECT CustomerID
				FROM UsersCustomers WHERE UserID <> @StatusUserID)
			AND UserID Not In (SELECT UserID FROM dbx_dbusers)
			AND CustomerID = @CustomerID

		END
		
		
		/* now for all users so far (their managers) */
		DECLARE @lCount int
		SELECT @lCount = 0

		WHILE @lCount <> (SELECT COUNT(UserID) FROM dbx_dbusers)
		BEGIN
		
			SELECT @lCount = (SELECT COUNT(UserID) FROM dbx_dbusers)

			INSERT INTO dbx_dbusers
			SELECT DISTINCT UsersManagers.ManagerUserID
			FROM UsersManagers, dbx_dbusers
			WHERE UsersManagers.UserID = dbx_dbusers.UserID
			AND
			UsersManagers.ManagerUserID NOT IN
				(SELECT UserID FROM dbx_dbusers)		

			SELECT @lCount = (SELECT COUNT(UserID) FROM dbx_dbusers)
		END



		/* don't send to the sender! */
		DELETE 
		FROM dbx_dbusers
		WHERE UserID = @StatusUserID



	END /* @StatusUserID Is Not Null */

	

	/* return the results */
	SELECT DISTINCT UserID
	FROM dbx_dbusers

 
 
 
 
GO


/* */
PRINT ''
PRINT 'Granting Privileges on:  spp_getdistribuserlist'
PRINT ''
/* */
GO

GRANT EXECUTE ON spp_getdistribuserlist TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.spp_makedb_getrelatedusers'
PRINT ''
/****************************************************************************/
GO

CREATE PROCEDURE spp_makedb_getrelatedusers
	@UserID int	/* required */
AS
	delete dbx_dbusers

	insert into dbx_dbusers

	select distinct UserID
	from UsersCustomers
	where CustomerID
	IN
	       (SELECT CustomerID
		FROM UsersCustomers
		WHERE UserID = @UserID)
	AND 
	UserID <> @UserID


	/* need to return the rows to the caller */
	/* no order by... */
	SELECT UserID
	FROM dbx_dbusers


	
 
 
 
GO


/* */
PRINT ''
PRINT 'Granting Privileges on:  spp_makedb_getrelatedusers'
PRINT ''
/* */
GO

GRANT EXECUTE ON spp_makedb_getrelatedusers TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Stored Procedure:  dbo.spp_makedb_userlist'
PRINT ''
/****************************************************************************/
GO

CREATE PROC spp_makedb_userlist
	@UserID int		/* required */

AS

	/* clear the table */	
	DELETE FROM dbx_dbusers

	IF NOT EXISTS (SELECT UserID FROM Users WHERE UserID = @UserID)
	RETURN 0

	/* all of the users where this user is a manager */
	INSERT INTO dbx_dbusers
	SELECT UserID
	FROM UsersManagers
	WHERE ManagerUserID = @UserID

	/* now once for all users inserted, get all of the users that are managed by each row */	
	DECLARE @lCount int
	SELECT @lCount = 0

	WHILE @lCount <> (SELECT COUNT(UserID) FROM dbx_dbusers)
	BEGIN
		SELECT @lCount = (SELECT COUNT(UserID) FROM dbx_dbusers)

		INSERT INTO dbx_dbusers (UserID) 
		SELECT DISTINCT UsersManagers.UserID
		FROM UsersManagers, dbx_dbusers
		WHERE UsersManagers.ManagerUserID = dbx_dbusers.UserID
		AND
		UsersManagers.UserID
			Not IN (SELECT UserID FROM dbx_dbusers)	

		SELECT @lCount = (SELECT COUNT(UserID) FROM dbx_dbusers)

	END

	/* ALWAYS insert the user that we are making the database for */
	/* i.e. @UserID */
	INSERT INTO dbx_dbusers (UserID) VALUES(@UserID)


	/* need to return the rows to the caller */
	/* no order by... */
	SELECT UserID
	FROM dbx_dbusers
	 
GO


/* */
PRINT ''
PRINT 'Granting Privileges on:  spp_makedb_userlist'
PRINT ''
/* */
GO

GRANT EXECUTE ON spp_makedb_userlist TO DBSyncUsers
GO
/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Contacts_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Contacts_ITrig ON Contacts FOR INSERT AS
/*
* PREVENT INSERTS IF NO MATCHING KEY IN 'Customers'
*/
	IF (SELECT COUNT(*) FROM inserted) !=
	(SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.CustomerID = inserted.CustomerID))
	BEGIN
		RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Customers'."
		ROLLBACK TRANSACTION
	END

 
GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Contacts_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Contacts_UTrig ON Contacts FOR UPDATE AS
/*
 * PREVENT UPDATES IF NO MATCHING KEY IN 'Customers'
 */
IF UPDATE(CustomerID)
    BEGIN
        IF (SELECT COUNT(*) FROM inserted) !=
           (SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.CustomerID = inserted.CustomerID))
            BEGIN
                RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Customers'."
                ROLLBACK TRANSACTION
            END
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Customers_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Customers_DTrig ON Customers FOR DELETE AS
/*
 * CASCADE DELETES TO 'Notes'
 */
DELETE Notes FROM deleted, Notes WHERE deleted.CustomerID = Notes.CustomerID

/*
 * CASCADE DELETES TO 'UsersCustomers'
 */
DELETE UsersCustomers FROM deleted, UsersCustomers WHERE deleted.CustomerID = UsersCustomers.CustomerID

/*
 * CASCADE DELETES TO 'Contacts'
 */
DELETE Contacts FROM deleted, Contacts WHERE deleted.CustomerID = Contacts.CustomerID

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Customers_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Customers_ITrig ON Customers FOR INSERT AS

/*
 * VALIDATION RULE FOR FIELD 'CustomerID'
 */
IF (SELECT Count(*) FROM inserted WHERE NOT (CustomerID>0)) > 0
    BEGIN
        RAISERROR 44444 "The CustomerID must be a number greater than 0."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Customers_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Customers_UTrig ON Customers FOR UPDATE AS

/*
 * VALIDATION RULE FOR FIELD 'CustomerID'
 */
IF (SELECT Count(*) FROM inserted WHERE NOT (CustomerID>0)) > 0
    BEGIN
        RAISERROR 44444 "The CustomerID must be a number greater than 0."
        ROLLBACK TRANSACTION
    END
/*
 * CASCADE UPDATES TO 'Notes'
 */
IF UPDATE(CustomerID)
    BEGIN
       UPDATE Notes
       SET Notes.CustomerID = inserted.CustomerID
       FROM Notes, deleted, inserted
       WHERE deleted.CustomerID = Notes.CustomerID
    END

/*
 * CASCADE UPDATES TO 'UsersCustomers'
 */
IF UPDATE(CustomerID)
    BEGIN
       UPDATE UsersCustomers
       SET UsersCustomers.CustomerID = inserted.CustomerID
       FROM UsersCustomers, deleted, inserted
       WHERE deleted.CustomerID = UsersCustomers.CustomerID
    END

/*
 * CASCADE UPDATES TO 'Contacts'
 */
IF UPDATE(CustomerID)
    BEGIN
       UPDATE Contacts
       SET Contacts.CustomerID = inserted.CustomerID
       FROM Contacts, deleted, inserted
       WHERE deleted.CustomerID = Contacts.CustomerID
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.dbx_sent_files_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER dbx_sent_files_ITrig ON dbx_sent_files FOR INSERT AS

/*
 * PREVENT NULL VALUES IN 'DateSent'
 */
IF (SELECT Count(*) FROM inserted WHERE DateSent IS NULL) > 0
    BEGIN
        RAISERROR 44444 "Field 'DateSent' cannot contain a null value."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.dbx_sent_files_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER dbx_sent_files_UTrig ON dbx_sent_files FOR UPDATE AS

/*
 * PREVENT NULL VALUES IN 'DateSent'
 */
IF (SELECT Count(*) FROM inserted WHERE DateSent IS NULL) > 0
    BEGIN
        RAISERROR 44444 "Field 'DateSent' cannot contain a null value."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.dbx_transactions_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER dbx_transactions_ITrig ON dbx_transactions FOR INSERT AS
DECLARE @maxc int, @newc int    /* FOR COUNTER-EMULATION CODE */
/*
 * COUNTER-EMULATION CODE FOR FIELD 'TransactionID'
 */
SELECT @maxc = (SELECT Max(TransactionID) FROM dbx_transactions) 
SELECT @newc = (SELECT TransactionID FROM inserted) 
IF @newc = 0 OR @maxc <> @newc SELECT @maxc = @maxc + 1 
UPDATE dbx_transactions SET TransactionID = @maxc WHERE TransactionID = @newc

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.dbx_user_transactions_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER dbx_user_transactions_ITrig ON dbx_user_transactions FOR INSERT AS
DECLARE @maxc int, @newc int    /* FOR COUNTER-EMULATION CODE */
/*
 * COUNTER-EMULATION CODE FOR FIELD 'TransactionID'
 */
SELECT @maxc = (SELECT Max(TransactionID) FROM dbx_user_transactions) 
SELECT @newc = (SELECT TransactionID FROM inserted) 
IF @newc = 0 OR @maxc <> @newc SELECT @maxc = @maxc + 1 
UPDATE dbx_user_transactions SET TransactionID = @maxc WHERE TransactionID = @newc

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Managers_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Managers_DTrig ON Managers FOR DELETE AS
/*
 * PREVENT DELETES IF DEPENDENT RECORDS IN 'UsersManagers'
 */
IF (SELECT COUNT(*) FROM deleted, UsersManagers WHERE (deleted.ManagerUserID = UsersManagers.ManagerUserID)) > 0
    BEGIN
        RAISERROR 44445 "Cannot delete or change record.  Since related records exist in table 'UsersManagers', referential integrity rules would be violated."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Managers_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Managers_UTrig ON Managers FOR UPDATE AS
/*
 * PREVENT UPDATES IF DEPENDENT RECORDS IN 'UsersManagers'
 */
IF UPDATE(ManagerUserID)
    BEGIN
        IF (SELECT COUNT(*) FROM deleted, UsersManagers WHERE (deleted.ManagerUserID = UsersManagers.ManagerUserID)) > 0
            BEGIN
                RAISERROR 44446 "Cannot delete or change record.  Since related records exist in table 'UsersManagers', referential integrity rules would be violated."
                ROLLBACK TRANSACTION
            END
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Notes_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Notes_ITrig ON Notes FOR INSERT AS
/*
* PREVENT INSERTS IF NO MATCHING KEY IN 'Customers'
*/
IF (SELECT COUNT(*) FROM inserted) !=
(SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.CustomerID = inserted.CustomerID))
BEGIN
RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Customers'."
ROLLBACK TRANSACTION
END

/*
* PREVENT INSERTS IF NO MATCHING KEY IN 'Users'
*/
IF (SELECT COUNT(*) FROM inserted) !=
(SELECT COUNT(*) FROM Users, inserted WHERE (Users.UserID = inserted.UserID))
BEGIN
RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Users'."
ROLLBACK TRANSACTION
END


GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Notes_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Notes_UTrig ON Notes FOR UPDATE AS
/*
* PREVENT UPDATES IF NO MATCHING KEY IN 'Customers'
*/
IF UPDATE(CustomerID)
BEGIN
IF (SELECT COUNT(*) FROM inserted) !=
(SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.CustomerID = inserted.CustomerID))
BEGIN
RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Customers'."
ROLLBACK TRANSACTION
END
END

/*
* PREVENT UPDATES IF NO MATCHING KEY IN 'Users'
*/
IF UPDATE(UserID)
BEGIN
IF (SELECT COUNT(*) FROM inserted) !=
(SELECT COUNT(*) FROM Users, inserted WHERE (Users.UserID = inserted.UserID))
BEGIN
RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Users'."
ROLLBACK TRANSACTION
END
END


GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Users_DTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Users_DTrig ON Users FOR DELETE AS
/*
 * PREVENT DELETES IF DEPENDENT RECORDS IN 'UsersManagers'
 */
IF (SELECT COUNT(*) FROM deleted, UsersManagers WHERE (deleted.UserID = UsersManagers.UserID)) > 0
    BEGIN
        RAISERROR 44445 "Cannot delete or change record.  Since related records exist in table 'UsersManagers', referential integrity rules would be violated."
        ROLLBACK TRANSACTION
    END

/*
 * CASCADE DELETES TO 'UsersCustomers'
 */
DELETE UsersCustomers FROM deleted, UsersCustomers WHERE deleted.UserID = UsersCustomers.UserID

/*
 * CASCADE DELETES TO 'Notes'
 */
DELETE Notes FROM deleted, Notes WHERE deleted.UserID = Notes.UserID

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Users_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Users_ITrig ON Users FOR INSERT AS

/*
 * VALIDATION RULE FOR FIELD 'UserID'
 */
IF (SELECT Count(*) FROM inserted WHERE NOT (UserID<2001)) > 0
    BEGIN
        RAISERROR 44444 "User IDs over 2000 are not allowed."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.Users_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER Users_UTrig ON Users FOR UPDATE AS

/*
 * VALIDATION RULE FOR FIELD 'UserID'
 */
IF (SELECT Count(*) FROM inserted WHERE NOT (UserID<2001)) > 0
    BEGIN
        RAISERROR 44444 "User IDs over 2000 are not allowed."
        ROLLBACK TRANSACTION
    END
/*
 * PREVENT UPDATES IF DEPENDENT RECORDS IN 'UsersManagers'
 */
IF UPDATE(UserID)
    BEGIN
        IF (SELECT COUNT(*) FROM deleted, UsersManagers WHERE (deleted.UserID = UsersManagers.UserID)) > 0
            BEGIN
                RAISERROR 44446 "Cannot delete or change record.  Since related records exist in table 'UsersManagers', referential integrity rules would be violated."
                ROLLBACK TRANSACTION
            END
    END

/*
 * CASCADE UPDATES TO 'UsersCustomers'
 */
IF UPDATE(UserID)
    BEGIN
       UPDATE UsersCustomers
       SET UsersCustomers.UserID = inserted.UserID
       FROM UsersCustomers, deleted, inserted
       WHERE deleted.UserID = UsersCustomers.UserID
    END

/*
 * CASCADE UPDATES TO 'Notes'
 */
IF UPDATE(UserID)
    BEGIN
       UPDATE Notes
       SET Notes.UserID = inserted.UserID
       FROM Notes, deleted, inserted
       WHERE deleted.UserID = Notes.UserID
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.UsersCustomers_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER UsersCustomers_ITrig ON UsersCustomers FOR INSERT AS
/*
 * PREVENT INSERTS IF NO MATCHING KEY IN 'Users'
 */
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Users, inserted WHERE (Users.UserID = inserted.UserID))
    BEGIN
        RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Users'."
        ROLLBACK TRANSACTION
    END

/*
 * PREVENT INSERTS IF NO MATCHING KEY IN 'Customers'
 */
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.CustomerID = inserted.CustomerID))
    BEGIN
        RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Customers'."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.UsersCustomers_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER UsersCustomers_UTrig ON UsersCustomers FOR UPDATE AS
/*
 * PREVENT UPDATES IF NO MATCHING KEY IN 'Users'
 */
IF UPDATE(UserID)
    BEGIN
        IF (SELECT COUNT(*) FROM inserted) !=
           (SELECT COUNT(*) FROM Users, inserted WHERE (Users.UserID = inserted.UserID))
            BEGIN
                RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Users'."
                ROLLBACK TRANSACTION
            END
    END

/*
 * PREVENT UPDATES IF NO MATCHING KEY IN 'Customers'
 */
IF UPDATE(CustomerID)
    BEGIN
        IF (SELECT COUNT(*) FROM inserted) !=
           (SELECT COUNT(*) FROM Customers, inserted WHERE (Customers.CustomerID = inserted.CustomerID))
            BEGIN
                RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Customers'."
                ROLLBACK TRANSACTION
            END
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.UsersManagers_ITrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER UsersManagers_ITrig ON UsersManagers FOR INSERT AS
/*
 * PREVENT INSERTS IF NO MATCHING KEY IN 'Users'
 */
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Users, inserted WHERE (Users.UserID = inserted.UserID))
    BEGIN
        RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Users'."
        ROLLBACK TRANSACTION
    END

/*
 * PREVENT INSERTS IF NO MATCHING KEY IN 'Managers'
 */
IF (SELECT COUNT(*) FROM inserted) !=
   (SELECT COUNT(*) FROM Managers, inserted WHERE (Managers.ManagerUserID = inserted.ManagerUserID))
    BEGIN
        RAISERROR 44447 "Cannot add or change record.  Referential integrity rules require a related record in table 'Managers'."
        ROLLBACK TRANSACTION
    END

GO

/****************************************************************************/
PRINT ''
PRINT 'Creating Trigger:  dbo.UsersManagers_UTrig'
PRINT ''
/****************************************************************************/
GO

CREATE TRIGGER UsersManagers_UTrig ON UsersManagers FOR UPDATE AS
/*
 * PREVENT UPDATES IF NO MATCHING KEY IN 'Users'
 */
IF UPDATE(UserID)
    BEGIN
        IF (SELECT COUNT(*) FROM inserted) !=
           (SELECT COUNT(*) FROM Users, inserted WHERE (Users.UserID = inserted.UserID))
            BEGIN
                RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Users'."
                ROLLBACK TRANSACTION
            END
    END

/*
 * PREVENT UPDATES IF NO MATCHING KEY IN 'Managers'
 */
IF UPDATE(ManagerUserID)
    BEGIN
        IF (SELECT COUNT(*) FROM inserted) !=
           (SELECT COUNT(*) FROM Managers, inserted WHERE (Managers.ManagerUserID = inserted.ManagerUserID))
            BEGIN
                RAISERROR 44446 "Cannot add or change record.  Referential integrity rules require a related record in table 'Managers'."
                ROLLBACK TRANSACTION
            END
    END

GO

/* Set the MSysConf option to disallow saving passwords locally */
/****************************************************************************/
PRINT ''
PRINT 'Updating MSysConf'
PRINT ''
/****************************************************************************/
INSERT INTO MSysConf (Config, chValue, nValue, Comment)
VALUES (101, '0', 0, 'Save Login ID and Password Locally?')
GO

/****************************************************************************/
PRINT ''
PRINT 'Inserting Customers Data...'
PRINT ''
/****************************************************************************/

SET NOCOUNT ON

INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(410, 'JAQRS Corporation, Inc.', '1111 6th Avenue', 'New York', 'NY', '10036', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-06 15:52:51', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(434, 'Monster Truck Technology', '219 54th Street', 'Redmond', 'WA', '98053', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(436, 'Micro-soft Tech', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(437, 'Smith, Smith, Jones and Jones', '41 South West Street', 'Baltimore', 'MD', '25798', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-06 15:50:20', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(488, 'Far Out Technologies', '333 South West Street', 'Richmond', 'WA', '23236', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(564, 'Searson Brothers', '3333 West 3rd', 'San Diego', 'CA', '58988', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(585, 'McBride Associates', '2063 Western Road', 'Yorba Linda', 'CA', '92687', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-13 11:03:22', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(598, 'New Horizons Incorporated', '3000 Eastern Road', 'Burbank', 'CA', '91522', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-13 11:03:00', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(606, 'Virtually Indespensable Software', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(693, 'Blue Texas', '24 Warner Avenue', 'Santa Ana', 'CA', '92707', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(724, 'Schur & Sugarman, Inc.', '9229 Sunset Boulevard - Suite 400', 'Los Angeles', 'Ca', '90069', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(739, 'Southern California Edison', 'P.O. Box 800 - 2244 Walnut Grove Avenue', 'Rosemead', 'CA', '91770', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(746, 'Jones, Johnson and Mallory', '915 Last Street', 'Sacramento', 'CA', '12588', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-08 11:37:40', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(801, 'LifeBoat Curtains', '1163 Lincoln Ave.', 'Shrewsbury', 'NJ', '07702', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-13 11:03:14', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(803, 'Old Tyme Computer Company', '120 Matilija Avenue', 'Tulsa', 'OK', '77887', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-04 15:21:24', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(811, 'California Network Maketing', '6596 Bradley Place', 'Los Angeles', 'CA', '32145', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-13 11:03:29', 0)
GO
INSERT INTO Customers (CustomerID, CustomerName, Address, City, State, Zip, Phone, Fax, DateCreated, DateModified, dbsyncid) VALUES(813, 'State Of The Nation', '333 Monroe', 'Dallas', 'TX', '58988', '(213) 555-1212', '(213) 555-1212', '1995-02-04 15:21:24', '1995-02-06 15:51:17', 0)
GO

/****************************************************************************/
PRINT ''
PRINT 'Inserting Users Data...'
PRINT ''
/****************************************************************************/

INSERT INTO Users (UserID, LogonName, MailName, FullName, Closing, Title, Direct, dbsyncid) VALUES(1, 'user1', 'Smith, David', 'David J. Smith', 'Sincerely', 'Sales Rep', '(213) 555-1212', 0)
GO
INSERT INTO Users (UserID, LogonName, MailName, FullName, Closing, Title, Direct, dbsyncid) VALUES(2, 'user2', 'Jones, Jerry', 'Jerry Jones', 'Sincerely', 'Sales Rep', '(213) 555-1212', 0)
GO
INSERT INTO Users (UserID, LogonName, MailName, FullName, Closing, Title, Direct, dbsyncid) VALUES(3, 'user3', 'Carpenter, Julie', 'Ms. Julie Carpenter', 'Sincerely', 'District Manager', '(213) 555-1212', 0)
GO
INSERT INTO Users (UserID, LogonName, MailName, FullName, Closing, Title, Direct, dbsyncid) VALUES(2000, 'dbsync', 'DBSyncAdmin', 'DBSyncAdmin', 'Sincerely', 'Administrator account', '(213) 555-1212', 0)
GO


/****************************************************************************/
PRINT ''
PRINT 'Inserting UsersCustomers Data...'
PRINT ''
/****************************************************************************/
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(1, 803, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(1, 811, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(1, 813, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 410, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 434, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 437, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 488, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 585, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 598, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 606, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 693, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 724, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 739, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 746, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 801, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 803, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 811, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(2, 813, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 410, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 598, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 606, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 693, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 724, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 739, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 746, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 801, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 803, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 811, 0)
GO
INSERT INTO UsersCustomers (UserID, CustomerID, dbsyncid) VALUES(3, 813, 0)
GO

/****************************************************************************/
PRINT ''
PRINT 'Inserting Contacts Data...'
PRINT ''
/****************************************************************************/

INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(20, 410, 'Johnson, John', 'John', 'Johnson', 'Dear John:', 'Systems Engineer', '1111 6th Avenue', 'New York', 'NY', '10036', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'JohnJ', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(21, 410, 'White, Bruce', 'Bruce', 'White', 'Dear Bruce:', 'Acount Manager', '1111 6th Avenue', 'New York', 'NY', '10036', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'BruceW', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(22, 410, 'Smith, Sherry', 'Sherry', 'Smith', 'Dear Sherry:', 'Systems Engineer', '1111 6th Avenue', 'New York', 'NY', '10036', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'SherryS', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(23, 410, 'Davis, Mark', 'Mr.', 'Mark', 'Davis', 'Dear Mark:', 'Systems Engineer', '1111 6th Avenue', 'New York', 'NY', '10036', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'MarkD', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(24, 410, 'Jones, Gary', 'Mr.', 'Gary', 'Jones', 'Dear Gary:', '1111 6th Avenue', 'New York', 'NY', '10036', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'GaryJ', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(25, 434, 'Baukman, David', 'David', 'Baukman', 'Dear David:', 'President', '219 54th Street', 'Redmond', 'WA', '98053', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DavidB', '1995-01-27 18:50:48', '1995-02-13 11:48:32', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(26, 434, 'Bolton, Sam', 'Sam', 'Bolton', 'Dear Sam:', '219 54th Street', 'Redmond', 'WA', '98053', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'SamB', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(27, 434, 'Lewis, John', 'John', 'Lewis', 'Dear John:', 'Programmer', '219 54th Street', 'Redmond', 'WA', '98053', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'JohnL', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, MidIni, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(28, 436, 'Bills, Theresa', 'Ms.', 'Theresa', 'M', 'Bills', 'Dear Theresa:', 'Office Manager', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'TheresaB', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(29, 436, 'Brett, Kimberly', 'Ms.', 'Kimberly', 'Brett', 'Dear Kimberly:', 'Project Manager', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'KimberlyB', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(30, 436, 'Butler, Bruce', 'Mr.', 'Bruce', 'Butler', 'Dear Bruce:', 'Consultant', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'BruceB', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, MidIni, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(31, 436, 'Metzger, Deborah', 'Ms.', 'Deborah', 'L', 'Metzger', 'Dear Deborah:', 'Sales/Marketing', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DeborahM', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(32, 436, 'Rognstad, Frode', 'Mr.', 'Frode', 'Rognstad', 'Dear Frode:', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'FrodeR', '1995-01-27 18:50:48', '1995-02-13 11:03:43', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(34, 436, 'Samuels, Kevin', 'Mr.', 'Kevin', 'Samuels', 'Dear Kevin:', 'Vice President', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'KevinS', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(35, 436, 'Moss, Mike', 'Mr.', 'Mike', 'Moss', 'Dear Mike:', 'Contractor/Programmer', '1000 Quail Street West', 'Newport Beach', 'CA', '92660', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'MikeM', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(36, 437, 'Brenkinridge, Penny', 'Ms.', 'Penny', 'Brenkinridge', 'Dear Penny:', 'Document Management Specialist', '41 South West Street', 'Baltimore', 'MD', '25798', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'PennyB', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(40, 564, 'Jones, Eric', 'Eric', 'Jones', 'Dear Eric:', 'Automation Manager', '3333 West 3rd', 'San Diego', 'CA', '58988', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'EricJ', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(41, 585, 'McKee, Bruce', 'Mr.', 'Bruce', 'McKee', 'Dear Bruce:', '2063 Western Road', 'Yorba Linda', 'CA', '92687', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'BruceM', '1995-01-27 18:50:48', '1995-02-13 11:03:40', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(43, 606, 'Moss, Ken', 'Ken', 'Moss', 'Dear Ken:', 'President', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'KenM', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(47, 606, 'Harding, Dave', 'Mr.', 'Dave', 'Harding', 'Dear Dave:', 'Senior Systems Analyst', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DaveH', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(48, 606, 'Klitzner, Erik', 'Mr.', 'Erik', 'Klitzner', 'Dear Erik:', 'Senior Project Manager', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'ErikK', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(49, 606, 'Smith, Greg', 'Greg', 'Smith', 'Dear Greg:', 'Software Engineer', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'GregS', '1995-01-27 18:50:48', '1995-02-13 11:03:58', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(50, 606, 'McVay, Terry', 'Mr.', 'Terry', 'McVay', 'Dear Terry:', 'Senior Project Manager', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'TerryM', '1995-01-27 18:50:48', '1995-02-08 14:40:38', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(51, 606, 'Coffey, John', 'John', 'Coffey', 'Dear John:', 'Project Manager', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'JohnC', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(52, 606, 'Coltrane, Darren', 'Mr.', 'Darren', 'Coltrane', 'Dear Darren:', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DarrenC', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(53, 606, 'Wilson, Denise', 'Denise', 'Wilson', 'Dear Denise:', 'Software Engineer', '333 Sweetzer Street', 'San Juan Capistrano', 'CA', '92675', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DeniseW', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(54, 693, 'Selff, Robert', 'Mr.', 'Robert', 'Selff', 'Dear Robert:', '24 Warner Avenue', 'Santa Ana', 'CA', '92707', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'RobertS', '1995-01-27 18:50:48', '1995-02-13 11:03:37', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(55, 724, 'Sugarman, Max', 'Mr.', 'Max', 'Sugarman', 'Dear Max:', 'Certified Public Accountant', '9229 Sunset Boulevard - Suite 400', 'Los Angeles', 'Ca', '90069', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'MaxS', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(56, 739, 'French, Mike', 'Mike', 'French', 'Dear Mike:', 'P.O. Box 800 - 2244 Walnut Grove Avenue', 'Rosemead', 'CA', '91770', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'MikeF', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(57, 739, 'Barten, Zoe', 'Zoe', 'Barten', 'Dear Zoe:', 'P.O. Box 800 - 2244 Walnut Grove Avenue', 'Rosemead', 'CA', '91770', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'ZoeB', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(58, 739, 'Quan, Liz', 'Liz', 'Quan', 'Dear Liz:', 'P.O. Box 800 - 2244 Walnut Grove Avenue', 'Rosemead', 'CA', '91770', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'LizQ', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(59, 739, 'Thompson, Jim', 'Jim', 'Thompson', 'Dear Jim:', 'P.O. Box 800 - 2244 Walnut Grove Avenue', 'Rosemead', 'CA', '91770', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'JimT', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(61, 746, 'Vilinskas, Mark', 'Mark', 'Vilinskas', 'Dear Mark:', 'Manager of Information Systems', '915 Last Street', 'Sacramento', 'CA', '12588', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'MarkV', '1995-01-27 18:50:48', '1995-01-27 18:50:48', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, Prefix, FirstName, LastName, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(62, 801, 'Snee, David', 'Mr.', 'David', 'Snee', 'Dear David:', '1163 Lincoln Ave.', 'Shrewsbury', 'NJ', '07702', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DavidS', '1995-01-27 18:50:48', '1995-02-13 11:48:18', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, MidIni, LastName, Suffix, Salutation, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(63, 803, 'Synder, Dave', 'Dave', 'F', 'Synder', 'Sr', 'Dear Dave:', '120 Matilija Avenue', 'Tulsa', 'OK', '77887', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'DaveS', '1995-01-27 18:50:48', '1995-02-14 13:06:06', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(64, 811, 'Wilson, Seymore', 'Seymore', 'Wilson', 'Dear Seymore:', 'Computer Specialist', '6596 Bradley Place', 'Los Angeles', 'CA', '32145', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'SeymoreW', '1995-01-27 18:50:48', '1995-02-14 13:06:03', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, MidIni, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(65, 813, 'Stoldt, Robert', 'Robert', 'C', 'Stoldt', 'Dear Robert:', 'Development Manager', '333 Monroe', 'Dallas', 'TX', '58988', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'RobertS', '1995-01-27 18:50:48', '1995-02-14 13:06:13', 0)
GO
INSERT INTO Contacts (ContactID, CustomerID, DisplayName, FirstName, LastName, Salutation, Title, Address, City, State, Zip, GeneralPhone, Direct, Fax, Mobile, Pager, EMail, DateCreated, DateModified, dbsyncid) VALUES(66, 813, 'Rivers, George', 'George', 'Rivers', 'Dear George:', 'Vice President, Technology and Development', '333 Monroe', 'Dallas', 'TX', '58988', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', '(206) 555-5555', 'GeorgeR', '1995-01-27 18:50:48', '1995-02-14 13:06:10', 0)
GO

/****************************************************************************/
PRINT ''
PRINT 'Inserting Notes Data...'
PRINT ''
/****************************************************************************/
INSERT INTO Notes (NoteID, CustomerID, ContactID, UserID, NoteDate, NoteType, NoteText, dbsyncid) VALUES(2000000000, 811, 64, 2000, '1995-02-14 09:00:00', 'Meeting', 'Sales call', 0)
GO
INSERT INTO Notes (NoteID, CustomerID, ContactID, UserID, NoteDate, NoteType, NoteText, dbsyncid) VALUES(2000000001, 693, 54, 2000, '1995-02-18 09:00:00', 'Meeting', 'Sales call', 0)
GO
INSERT INTO Notes (NoteID, CustomerID, ContactID, UserID, NoteDate, NoteType, NoteText, dbsyncid) VALUES(2000000002, 693, 54, 2000, '1995-02-21 15:00:00', 'Meeting', 'Sales call', 0)
GO
INSERT INTO Notes (NoteID, CustomerID, ContactID, UserID, NoteDate, NoteType, NoteText, dbsyncid) VALUES(2000000003, 410, 21, 2000, '1995-02-22 15:00:00', 'Meeting', 'Sales call', 0)
GO

/****************************************************************************/
PRINT ''
PRINT 'Inserting Managers/UsersManagers Data...'
PRINT ''
/****************************************************************************/
INSERT INTO Managers (ManagerUserID) VALUES(3)
GO
INSERT INTO UsersManagers(UserID, ManagerUserID) VALUES(1, 3)
GO
INSERT INTO UsersManagers(UserID, ManagerUserID) VALUES(2, 3)
GO

/****************************************************************************/
PRINT ''
PRINT 'Inserting Products/Sales Data...'
PRINT ''
/****************************************************************************/
INSERT INTO Products (ProductID, Name) VALUES(1, 'Product 1')
GO
INSERT INTO Products (ProductID, Name) VALUES(2, 'Product 2')
GO
INSERT INTO Products (ProductID, Name) VALUES(3, 'Product 3')
GO
INSERT INTO Products (ProductID, Name) VALUES(4, 'Product 4')
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 1, 1, 1993, 500, 100, 210, 333, 500, 125, 111, 135, 599, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 2, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 3, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 4, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 1, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 2, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 3, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 4, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 1, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 2, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 3, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 4, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 1, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 2, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 3, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 4, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 1, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 2, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 3, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 4, 1, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 1, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 2, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 3, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 4, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 1, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 2, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 3, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 4, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 1, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 2, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 3, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 4, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 1, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 2, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 3, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 4, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 1, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 2, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 3, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 4, 2, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 1, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 2, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 3, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 4, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 1, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 2, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 3, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 4, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 1, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 2, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 3, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 4, 3, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 1, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 2, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 3, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 4, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 1, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 2, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 3, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 4, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 1, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 2, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 3, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 4, 4, 1993, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 1, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 2, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 3, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 4, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 1, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 2, 1, 1992, 100, 210, 333, 500, 125, 111, 135, 599, 200, 383, 998, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 3, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 4, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 1, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 2, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 3, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 4, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 1, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 2, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 3, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 4, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 1, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 2, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 3, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 4, 1, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 1, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 2, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 3, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 4, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 1, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 2, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 3, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 4, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 1, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 2, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 3, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 4, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 1, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 2, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 3, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 4, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 1, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 2, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 3, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 4, 2, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 1, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 2, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 3, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 4, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 1, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 2, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 3, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 4, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 1, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 2, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 3, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 4, 3, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 1, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 2, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 3, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 4, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 1, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 2, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 3, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 4, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 1, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 2, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 3, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 4, 4, 1992, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 1, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 2, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 3, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(410, 4, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 1, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 2, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 3, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(434, 4, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 1, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 2, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 3, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(436, 4, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 1, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 2, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 3, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(437, 4, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 1, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 2, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 3, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(488, 4, 1, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 1, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 2, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 3, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(564, 4, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 1, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 2, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 3, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(585, 4, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 1, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 2, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 3, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(598, 4, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 1, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 2, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 3, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(606, 4, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 1, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 2, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 3, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(693, 4, 2, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 1, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 2, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 3, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(724, 4, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 1, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 2, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 3, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(739, 4, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 1, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 2, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 3, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(746, 4, 3, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 1, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 2, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 3, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(801, 4, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 1, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 2, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 3, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(803, 4, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 1, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 2, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 3, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO
INSERT INTO Sales (CustomerID, ProductID, Region, Year, January, February, March, April, May, June, July, August, September, October, November, December, TotalSales) VALUES(811, 4, 4, 1994, 500, 400, 100, 250, 300, 400, 900, 400, 100, 200, 383, 998, 4931)
GO


SET NOCOUNT OFF





PRINT 'DBSync SQL Database Completed.'
GO