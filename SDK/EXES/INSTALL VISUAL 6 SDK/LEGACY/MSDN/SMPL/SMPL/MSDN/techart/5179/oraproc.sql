/*************************************************************************
	Oracle 7 Database - Stored Procedure Creation Script
	
	The following script creates the Oracle stored procedure, functions,
	and packages required for the sample Oracle program.
*************************************************************************/

/*************************************************************************
	LOG ON AS STUDENT_ADMIN
**************************************************************************/
CONNECT STUDENT_ADMIN/STUDENT_ADMIN@WILBUR

/*************************************************************************
	CREATE STUDENT_ADMIN STORED PROGRAMS
**************************************************************************/
CREATE OR REPLACE PACKAGE STUDENT_ADMIN.P1 AS
	ROWCOUNT NUMBER := 0;
	CURSOR C1 RETURN STUDENT%ROWTYPE;
	FUNCTION SHOW_RELUCTANT_STUDENTS(WORKVAR OUT VARCHAR2) RETURN NUMBER;
END P1;
/

CREATE OR REPLACE PACKAGE BODY STUDENT_ADMIN.P1 AS
	CURSOR C1 RETURN STUDENT%ROWTYPE IS
		SELECT * FROM STUDENT_ADMIN.STUDENT WHERE NOT EXISTS
		(SELECT 'X' FROM STUDENT_ADMIN.GRADE WHERE GRADE.SSN = STUDENT.SSN) ORDER BY SSN;

	FUNCTION SHOW_RELUCTANT_STUDENTS (WORKVAR OUT VARCHAR2) RETURN NUMBER IS
		WORKREC STUDENT%ROWTYPE;
		BEGIN
		IF NOT C1%ISOPEN THEN OPEN C1;
			ROWCOUNT := 0;
		END IF;
		FETCH C1 INTO WORKREC;
		IF (C1%NOTFOUND) THEN
			CLOSE C1;
			ROWCOUNT := 0;
		ELSE
			WORKVAR := WORKREC.FNAME||' '||WORKREC.LNAME||
				', social security number '||WORKREC.SSN||
				' is not enrolled in any classes!';
			ROWCOUNT := ROWCOUNT + 1;					
		END IF;
		RETURN(ROWCOUNT);

	EXCEPTION
		WHEN OTHERS THEN 
			IF C1%ISOPEN THEN CLOSE C1;
			ROWCOUNT := 0;
			END IF;
			RAISE_APPLICATION_ERROR(-20001,SQLERRM);
	END SHOW_RELUCTANT_STUDENTS;
END P1;
/

GRANT EXECUTE ON STUDENT_ADMIN.P1 TO DATA_ADMIN, USER_LOGON
/

/*************************************************************************
	LOG ON AS DEPT_ADMIN
**************************************************************************/
CONNECT DEPT_ADMIN/DEPT_ADMIN@WILBUR

/*************************************************************************
	CREATE DEPT_ADMIN STORED PROGRAMS
**************************************************************************/
CREATE OR REPLACE FUNCTION DEPT_ADMIN.DELETE_DEPT (VDEPT IN VARCHAR2)
	RETURN NUMBER AS
	BEGIN
		DELETE FROM DEPT_ADMIN.DEPT WHERE DEPT = VDEPT;
		RETURN(SQL%ROWCOUNT);
	EXCEPTION
		WHEN OTHERS THEN
			RAISE_APPLICATION_ERROR(-20001,SQLERRM);
	END DELETE_DEPT;
/

GRANT EXECUTE ON DEPT_ADMIN.DELETE_DEPT TO DATA_ADMIN
/

DROP PUBLIC SYNONYM DELETE_DEPT
/

CREATE PUBLIC SYNONYM DELETE_DEPT FOR DEPT_ADMIN.DELETE_DEPT
/

CREATE OR REPLACE FUNCTION DEPT_ADMIN.INSERT_DEPT (VDEPT IN VARCHAR2, VDNAME IN VARCHAR2)
	RETURN NUMBER AS
	BEGIN
		INSERT INTO DEPT_ADMIN.DEPT (DEPT, DNAME)
		VALUES (VDEPT, VDNAME);
		RETURN(SQL%ROWCOUNT);
	EXCEPTION
		WHEN OTHERS THEN
			RAISE_APPLICATION_ERROR(-20001,SQLERRM);
	END INSERT_DEPT;
/

GRANT EXECUTE ON DEPT_ADMIN.INSERT_DEPT TO DATA_ADMIN
/

DROP PUBLIC SYNONYM INSERT_DEPT
/

CREATE PUBLIC SYNONYM INSERT_DEPT FOR DEPT_ADMIN.INSERT_DEPT
/

CREATE OR REPLACE FUNCTION DEPT_ADMIN.DELETE_CLASS (VCCODE IN VARCHAR2)
	RETURN NUMBER AS
	BEGIN
		DELETE FROM DEPT_ADMIN.CLASS WHERE CCODE = VCCODE;
		RETURN(SQL%ROWCOUNT);
	EXCEPTION
		WHEN OTHERS THEN
			RAISE_APPLICATION_ERROR(-20001,SQLERRM);
	END DELETE_CLASS;
/

GRANT EXECUTE ON DEPT_ADMIN.DELETE_CLASS TO DATA_ADMIN
/

DROP PUBLIC SYNONYM DELETE_CLASS
/

CREATE PUBLIC SYNONYM DELETE_CLASS FOR DEPT_ADMIN.DELETE_CLASS
/

CREATE OR REPLACE FUNCTION DEPT_ADMIN.INSERT_CLASS (VCCODE IN VARCHAR2,
	VCNAME IN VARCHAR2, VDEPT IN VARCHAR2, VROOM IN VARCHAR2, VPREREQ IN VARCHAR2)
	RETURN NUMBER AS
	BEGIN
		INSERT INTO DEPT_ADMIN.CLASS (CCODE, CNAME, DEPT, ROOM, PREREQ)
		VALUES (VCCODE, VCNAME, VDEPT, VROOM, VPREREQ);
		RETURN(SQL%ROWCOUNT);
	EXCEPTION
		WHEN OTHERS THEN
			RAISE_APPLICATION_ERROR(-20001,SQLERRM);
	END INSERT_CLASS;
/

GRANT EXECUTE ON DEPT_ADMIN.INSERT_CLASS TO DATA_ADMIN
/

DROP PUBLIC SYNONYM INSERT_CLASS
/

CREATE PUBLIC SYNONYM INSERT_CLASS FOR DEPT_ADMIN.INSERT_CLASS
/