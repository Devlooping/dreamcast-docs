/*************************************************************************
	SQL Server DBMS - View and procedure creation script
	Database - student_db
	
	The following script creates the views and procedures required
	for the multiple dbms sample program
*************************************************************************/

/*************************************************************************
	THIS SCRIPT MUST BE RUN USING THE "SA" ACCOUNT
*************************************************************************/

/*************************************************************************
	USE THE USER_DB DATABASE
*************************************************************************/

USE USER_DB
GO

/*************************************************************************
	CREATE COMMON VIEWS AND PROCEDURES
*************************************************************************/
DROP VIEW STUDENT_ADMIN.LIST_STUDENTS
GO

CREATE VIEW STUDENT_ADMIN.LIST_STUDENTS AS
SELECT SSN, FNAME+' '+LNAME AS NAME,
	CASE GENDER
		WHEN 'M' THEN 'Male'
		WHEN 'F' THEN 'Female'
		ELSE 'Unknown' END AS GENDER,
	SUBSTRING(DATENAME(MM, BIRTH_DATE)+' '+DATENAME(DD, BIRTH_DATE)+', '+DATENAME(YY, BIRTH_DATE),1,20) AS BIRTH_DATE,
	MAJOR, CASE DEGREE_PROGRAM
		WHEN 'U' THEN 'Undergraduate'
		WHEN 'M' THEN 'Masters'
		WHEN 'P' THEN 'PhD.'
		ELSE 'Unknown'
	END AS DEGREE_PROGRAM,
	ISNULL(TUITION_PAID,0) AS TUITION_PAID,
	ISNULL(TUITION_TOTAL,0) AS TUITION_TOTAL,
	ISNULL(TUITION_TOTAL,0) - ISNULL(TUITION_PAID,0) AS AMOUNT_OWED,
	ISNULL(LOAN_AMOUNT,0) AS LOAN_AMOUNT,
	SUBSTRING(DATENAME(MM, START_DATE)+' '+DATENAME(DD, START_DATE)+', '+DATENAME(YY, START_DATE),1,20) AS START_DATE,
	SUBSTRING(DATENAME(MM, GRAD_DATE)+' '+DATENAME(DD, GRAD_DATE)+', '+DATENAME(YY, GRAD_DATE),1,20) AS GRAD_DATE,
	ISNULL(DATEDIFF(YY, BIRTH_DATE, GRAD_DATE),0) AS AGE_AT_GRADUATION
FROM STUDENT_ADMIN.STUDENT
GO

GRANT SELECT ON STUDENT_ADMIN.LIST_STUDENTS TO DATA_ADMIN, USER_LOGON
GO

DROP VIEW STUDENT_ADMIN.LIST_ENROLLMENTS
GO

CREATE VIEW STUDENT_ADMIN.LIST_ENROLLMENTS AS
SELECT S.SSN, FNAME+' '+LNAME AS NAME,
	ISNULL(G.CCODE,'****') AS CCODE,
	ISNULL(C.CNAME,'****') AS CNAME,
	ISNULL(GRADE,'**') AS GRADE
FROM STUDENT_ADMIN.GRADE G
	RIGHT OUTER JOIN STUDENT_ADMIN.STUDENT S ON G.SSN = S.SSN
	LEFT OUTER JOIN DEPT_ADMIN.CLASS C ON G.CCODE = C.CCODE
GO

GRANT SELECT ON STUDENT_ADMIN.LIST_ENROLLMENTS TO DATA_ADMIN, USER_LOGON
GO


DROP VIEW STUDENT_ADMIN.LIST_CLASSES
GO

CREATE VIEW STUDENT_ADMIN.LIST_CLASSES AS
SELECT ISNULL(CCODE,'****') AS CCODE,
	ISNULL(CNAME,'****') AS CNAME,
	D.DEPT,
	ISNULL(ROOM,'****') AS ROOM,
	ISNULL(PREREQ,'****') AS PREREQ,
	ISNULL(D.DNAME,'****') AS DNAME
FROM DEPT_ADMIN.DEPT D, DEPT_ADMIN.CLASS C
	WHERE D.DEPT *= C.DEPT
GO

GRANT SELECT ON STUDENT_ADMIN.LIST_CLASSES TO DATA_ADMIN, USER_LOGON
GO

DROP VIEW STUDENT_ADMIN.LIST_GPA
GO

CREATE VIEW STUDENT_ADMIN.LIST_GPA AS
SELECT S.SSN AS SSN, S.FNAME+' '+S.LNAME AS NAME, ISNULL(G.GPA,0) AS GPA
FROM STUDENT_ADMIN.STUDENT_GPA G, STUDENT_ADMIN.STUDENT S
	WHERE S.SSN *= G.SSN
GO

GRANT SELECT ON STUDENT_ADMIN.LIST_GPA TO DATA_ADMIN, USER_LOGON
GO

DROP VIEW STUDENT_ADMIN.LIST_STUDENT_BY_CLASS
GO

CREATE VIEW STUDENT_ADMIN.LIST_STUDENT_BY_CLASS AS
SELECT ISNULL(C.CCODE,'****') AS CCODE, ISNULL(CNAME,'****') AS CNAME,
	C.DEPT AS DEPT, ISNULL(ROOM,'****') AS ROOM,
	ISNULL(PREREQ,'****') AS PREREQ,
	ISNULL(D.DNAME,'****') AS DNAME, ISNULL(G.SSN,'*********') AS SSN,
	ISNULL(G.GRADE,'**') AS GRADE
FROM DEPT_ADMIN.DEPT D, DEPT_ADMIN.CLASS C,STUDENT_ADMIN.GRADE G
	WHERE D.DEPT = C.DEPT AND C.CCODE *= G.CCODE
GO

GRANT SELECT ON STUDENT_ADMIN.LIST_STUDENT_BY_CLASS TO DATA_ADMIN, USER_LOGON
GO

DROP VIEW STUDENT_ADMIN.RELUCTANT_STUDENTS
GO

CREATE VIEW STUDENT_ADMIN.RELUCTANT_STUDENTS AS
SELECT SSN, FNAME+' '+LNAME+', social security number '+SSN+
	' is not enrolled in any classes!' AS RELUCTANT_STUDENT
FROM STUDENT_ADMIN.STUDENT S WHERE NOT EXISTS
	(SELECT 'X' FROM STUDENT_ADMIN.GRADE G WHERE G.SSN = S.SSN)
GO

GRANT SELECT ON STUDENT_ADMIN.RELUCTANT_STUDENTS TO DATA_ADMIN, USER_LOGON
GO

DROP VIEW STUDENT_ADMIN.NEEDED_CLASSES
GO

CREATE VIEW STUDENT_ADMIN.NEEDED_CLASSES AS
SELECT SSN, FNAME+' '+LNAME AS NAME, MAJOR,
	CCODE, CNAME, DEPT, ISNULL(ROOM,'******') AS ROOM,
	ISNULL(PREREQ,'****') AS PREREQ
FROM STUDENT_ADMIN.STUDENT S1, DEPT_ADMIN.CLASS C WHERE NOT EXISTS
	(select 'X' from STUDENT_ADMIN.student s2, STUDENT_ADMIN.grade g
	where s2.ssn = g.ssn and s2.ssn = s1.ssn
	and g.ccode = c.ccode) AND DEPT = MAJOR
GO

GRANT SELECT ON STUDENT_ADMIN.NEEDED_CLASSES TO DATA_ADMIN, USER_LOGON
GO

DROP VIEW STUDENT_ADMIN.EMPTY_CLASSES
GO

CREATE VIEW STUDENT_ADMIN.EMPTY_CLASSES AS
SELECT C.CCODE AS CCODE, C.CNAME AS CNAME, C.DEPT AS DEPT,
	ISNULL(C.ROOM,'******') ROOM, ISNULL(C.PREREQ,'****') PREREQ
FROM DEPT_ADMIN.CLASS C WHERE NOT EXISTS
	(SELECT 'X' FROM STUDENT_ADMIN.GRADE G WHERE G.CCODE = C.CCODE)
GO

GRANT SELECT ON STUDENT_ADMIN.EMPTY_CLASSES TO DATA_ADMIN, USER_LOGON
GO

DROP PROCEDURE STUDENT_ADMIN.INSERT_STUDENT
GO

CREATE PROCEDURE STUDENT_ADMIN.INSERT_STUDENT
@VSSN VARCHAR(9), @VFNAME VARCHAR(12), @VLNAME VARCHAR(20), @VGENDER VARCHAR(1),
@VMAJOR VARCHAR(4), @VBIRTH_DATE VARCHAR(30), @VTUITION_PAID VARCHAR(30),
@VTUITION_TOTAL VARCHAR(30), @VSTART_DATE VARCHAR(30), @VGRAD_DATE VARCHAR(30),
@VLOAN_AMOUNT VARCHAR(30), @VDEGREE_PROGRAM VARCHAR(1)
AS
INSERT INTO STUDENT_ADMIN.STUDENT (SSN,FNAME,LNAME,GENDER,MAJOR,BIRTH_DATE,
TUITION_PAID,TUITION_TOTAL,START_DATE,GRAD_DATE,LOAN_AMOUNT,DEGREE_PROGRAM)
VALUES (@VSSN, @VFNAME, @VLNAME, @VGENDER, @VMAJOR, @VBIRTH_DATE,
CONVERT(NUMERIC(12,2),@VTUITION_PAID),
CONVERT(NUMERIC(12,2),@VTUITION_TOTAL),
@VSTART_DATE,
@VGRAD_DATE,
CONVERT(NUMERIC(12,2),
@VLOAN_AMOUNT),
@VDEGREE_PROGRAM)
RETURN @@ROWCOUNT
GO

GRANT EXECUTE ON STUDENT_ADMIN.INSERT_STUDENT TO DATA_ADMIN
GO

DROP PROCEDURE DEPT_ADMIN.DELETE_DEPT
GO

CREATE PROCEDURE DEPT_ADMIN.DELETE_DEPT @VDEPT VARCHAR(4) AS
DELETE FROM DEPT_ADMIN.DEPT WHERE DEPT = @VDEPT
RETURN @@ROWCOUNT
GO

GRANT EXECUTE ON DEPT_ADMIN.DELETE_DEPT TO DATA_ADMIN
GO

DROP PROCEDURE DEPT_ADMIN.INSERT_DEPT
GO

CREATE PROCEDURE DEPT_ADMIN.INSERT_DEPT
	@VDEPT VARCHAR(4), @VDNAME VARCHAR(30) AS
INSERT INTO DEPT_ADMIN.DEPT (DEPT,DNAME)
VALUES (@VDEPT, @VDNAME)
RETURN @@ROWCOUNT
GO

GRANT EXECUTE ON DEPT_ADMIN.INSERT_DEPT TO DATA_ADMIN
GO

DROP PROCEDURE DEPT_ADMIN.DELETE_CLASS
GO

CREATE PROCEDURE DEPT_ADMIN.DELETE_CLASS @VCCODE VARCHAR(4) AS
DELETE FROM DEPT_ADMIN.CLASS WHERE CCODE = @VCCODE
RETURN @@ROWCOUNT
GO

GRANT EXECUTE ON DEPT_ADMIN.DELETE_CLASS TO DATA_ADMIN
GO

DROP PROCEDURE DEPT_ADMIN.INSERT_CLASS
GO

CREATE PROCEDURE DEPT_ADMIN.INSERT_CLASS
	@VCCODE VARCHAR(4), @VCNAME VARCHAR(30), @VDEPT VARCHAR(4),
	@VROOM VARCHAR(6), @VPREREQ VARCHAR(4) AS
INSERT INTO DEPT_ADMIN.CLASS (CCODE, CNAME, DEPT, ROOM, PREREQ)
VALUES (@VCCODE, @VCNAME, @VDEPT, @VROOM, @VPREREQ)
RETURN @@ROWCOUNT
GO

GRANT EXECUTE ON DEPT_ADMIN.INSERT_CLASS TO DATA_ADMIN
GO
